// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: soap.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "soap.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace soapproto {
class RechargeNotifyDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<RechargeNotify> {
} _RechargeNotify_default_instance_;
class UserInfoDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<UserInfo> {
} _UserInfo_default_instance_;
class RankInfoDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<RankInfo> {
} _RankInfo_default_instance_;
class QueryRankReqDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<QueryRankReq> {
} _QueryRankReq_default_instance_;
class QueryRankRspDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<QueryRankRsp> {
} _QueryRankRsp_default_instance_;
class RoomPlayerInfoDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<RoomPlayerInfo> {
} _RoomPlayerInfo_default_instance_;
class LoginReqDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<LoginReq> {
} _LoginReq_default_instance_;
class LoginRspDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<LoginRsp> {
} _LoginRsp_default_instance_;
class MailNumberNotifyDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<MailNumberNotify> {
} _MailNumberNotify_default_instance_;
class MailItemDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<MailItem> {
} _MailItem_default_instance_;
class MailMemoDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<MailMemo> {
} _MailMemo_default_instance_;
class MailContentDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<MailContent> {
} _MailContent_default_instance_;
class MailFetchListReqDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<MailFetchListReq> {
} _MailFetchListReq_default_instance_;
class MailFetchListRspDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<MailFetchListRsp> {
} _MailFetchListRsp_default_instance_;
class FetchMailReqDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<FetchMailReq> {
} _FetchMailReq_default_instance_;
class FetchMailRspDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<FetchMailRsp> {
} _FetchMailRsp_default_instance_;
class PickMailReqDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<PickMailReq> {
} _PickMailReq_default_instance_;
class ShopItemidDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ShopItemid> {
} _ShopItemid_default_instance_;
class PickMailRspDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<PickMailRsp> {
} _PickMailRsp_default_instance_;
class JoinRoomReqDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<JoinRoomReq> {
} _JoinRoomReq_default_instance_;
class JoinRoomRspDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<JoinRoomRsp> {
} _JoinRoomRsp_default_instance_;
class JoinRoomEventDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<JoinRoomEvent> {
} _JoinRoomEvent_default_instance_;
class QuitRoomReqDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<QuitRoomReq> {
} _QuitRoomReq_default_instance_;
class QuitRoomRspDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<QuitRoomRsp> {
} _QuitRoomRsp_default_instance_;
class QuitRoomEventDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<QuitRoomEvent> {
} _QuitRoomEvent_default_instance_;
class StartBattleNotifyDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<StartBattleNotify> {
} _StartBattleNotify_default_instance_;
class BattleResultReqDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<BattleResultReq> {
} _BattleResultReq_default_instance_;
class BattleResultRspDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<BattleResultRsp> {
} _BattleResultRsp_default_instance_;

namespace protobuf_soap_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[28];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[2];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] = {
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RechargeNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RechargeNotify, error_code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RechargeNotify, error_reason_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RechargeNotify, uid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RechargeNotify, diamonds_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RechargeNotify, golds_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RechargeNotify, items_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RechargeNotify, gifts_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RechargeNotify, rmbcount_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserInfo, user_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserInfo, nickname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserInfo, diamonds_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserInfo, golds_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserInfo, max_socore_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserInfo, last_score_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RankInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RankInfo, rank_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RankInfo, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RankInfo, nickname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RankInfo, score_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryRankReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryRankReq, ranktype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryRankReq, range_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryRankRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryRankRsp, rank_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryRankRsp, infos_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoomPlayerInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoomPlayerInfo, user_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoomPlayerInfo, nickname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoomPlayerInfo, equips_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginReq, token_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginRsp, result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginRsp, timestamp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginRsp, millisecond_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MailNumberNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MailNumberNotify, newmailnumber_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MailNumberNotify, totalmailnumber_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MailItem, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MailItem, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MailItem, num_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MailMemo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MailMemo, mailid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MailMemo, title_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MailMemo, status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MailMemo, extrastatus_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MailContent, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MailContent, mailid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MailContent, content1_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MailContent, content2_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MailContent, content3_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MailContent, items_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MailFetchListReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MailFetchListReq, user_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MailFetchListRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MailFetchListRsp, result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MailFetchListRsp, memos_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FetchMailReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FetchMailReq, mailid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FetchMailRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FetchMailRsp, result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FetchMailRsp, content_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PickMailReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PickMailReq, mailid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShopItemid, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShopItemid, itemid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PickMailRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PickMailRsp, result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PickMailRsp, userdiamonds_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PickMailRsp, usergolds_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PickMailRsp, useritems_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JoinRoomReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JoinRoomReq, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JoinRoomReq, room_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JoinRoomRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JoinRoomRsp, result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JoinRoomRsp, room_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JoinRoomRsp, other_players_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JoinRoomRsp, random_seed_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JoinRoomRsp, start_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JoinRoomRsp, owner_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JoinRoomEvent, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JoinRoomEvent, info_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuitRoomReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuitRoomReq, user_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuitRoomRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuitRoomRsp, result_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuitRoomEvent, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuitRoomEvent, user_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StartBattleNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StartBattleNotify, time_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BattleResultReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BattleResultReq, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BattleResultReq, score_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BattleResultRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BattleResultRsp, result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BattleResultRsp, gifts_),
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, -1, sizeof(RechargeNotify)},
  { 13, -1, sizeof(UserInfo)},
  { 24, -1, sizeof(RankInfo)},
  { 33, -1, sizeof(QueryRankReq)},
  { 40, -1, sizeof(QueryRankRsp)},
  { 47, -1, sizeof(RoomPlayerInfo)},
  { 55, -1, sizeof(LoginReq)},
  { 61, -1, sizeof(LoginRsp)},
  { 69, -1, sizeof(MailNumberNotify)},
  { 76, -1, sizeof(MailItem)},
  { 83, -1, sizeof(MailMemo)},
  { 92, -1, sizeof(MailContent)},
  { 102, -1, sizeof(MailFetchListReq)},
  { 108, -1, sizeof(MailFetchListRsp)},
  { 115, -1, sizeof(FetchMailReq)},
  { 121, -1, sizeof(FetchMailRsp)},
  { 128, -1, sizeof(PickMailReq)},
  { 134, -1, sizeof(ShopItemid)},
  { 140, -1, sizeof(PickMailRsp)},
  { 149, -1, sizeof(JoinRoomReq)},
  { 156, -1, sizeof(JoinRoomRsp)},
  { 167, -1, sizeof(JoinRoomEvent)},
  { 173, -1, sizeof(QuitRoomReq)},
  { 179, -1, sizeof(QuitRoomRsp)},
  { 185, -1, sizeof(QuitRoomEvent)},
  { 191, -1, sizeof(StartBattleNotify)},
  { 197, -1, sizeof(BattleResultReq)},
  { 204, -1, sizeof(BattleResultRsp)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_RechargeNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_UserInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_RankInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_QueryRankReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_QueryRankRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_RoomPlayerInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_LoginReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_LoginRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_MailNumberNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_MailItem_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_MailMemo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_MailContent_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_MailFetchListReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_MailFetchListRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_FetchMailReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_FetchMailRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PickMailReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ShopItemid_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PickMailRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_JoinRoomReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_JoinRoomRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_JoinRoomEvent_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_QuitRoomReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_QuitRoomRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_QuitRoomEvent_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_StartBattleNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_BattleResultReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_BattleResultRsp_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "soap.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 28);
}

}  // namespace

void TableStruct::Shutdown() {
  _RechargeNotify_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
  _UserInfo_default_instance_.Shutdown();
  delete file_level_metadata[1].reflection;
  _RankInfo_default_instance_.Shutdown();
  delete file_level_metadata[2].reflection;
  _QueryRankReq_default_instance_.Shutdown();
  delete file_level_metadata[3].reflection;
  _QueryRankRsp_default_instance_.Shutdown();
  delete file_level_metadata[4].reflection;
  _RoomPlayerInfo_default_instance_.Shutdown();
  delete file_level_metadata[5].reflection;
  _LoginReq_default_instance_.Shutdown();
  delete file_level_metadata[6].reflection;
  _LoginRsp_default_instance_.Shutdown();
  delete file_level_metadata[7].reflection;
  _MailNumberNotify_default_instance_.Shutdown();
  delete file_level_metadata[8].reflection;
  _MailItem_default_instance_.Shutdown();
  delete file_level_metadata[9].reflection;
  _MailMemo_default_instance_.Shutdown();
  delete file_level_metadata[10].reflection;
  _MailContent_default_instance_.Shutdown();
  delete file_level_metadata[11].reflection;
  _MailFetchListReq_default_instance_.Shutdown();
  delete file_level_metadata[12].reflection;
  _MailFetchListRsp_default_instance_.Shutdown();
  delete file_level_metadata[13].reflection;
  _FetchMailReq_default_instance_.Shutdown();
  delete file_level_metadata[14].reflection;
  _FetchMailRsp_default_instance_.Shutdown();
  delete file_level_metadata[15].reflection;
  _PickMailReq_default_instance_.Shutdown();
  delete file_level_metadata[16].reflection;
  _ShopItemid_default_instance_.Shutdown();
  delete file_level_metadata[17].reflection;
  _PickMailRsp_default_instance_.Shutdown();
  delete file_level_metadata[18].reflection;
  _JoinRoomReq_default_instance_.Shutdown();
  delete file_level_metadata[19].reflection;
  _JoinRoomRsp_default_instance_.Shutdown();
  delete file_level_metadata[20].reflection;
  _JoinRoomEvent_default_instance_.Shutdown();
  delete file_level_metadata[21].reflection;
  _QuitRoomReq_default_instance_.Shutdown();
  delete file_level_metadata[22].reflection;
  _QuitRoomRsp_default_instance_.Shutdown();
  delete file_level_metadata[23].reflection;
  _QuitRoomEvent_default_instance_.Shutdown();
  delete file_level_metadata[24].reflection;
  _StartBattleNotify_default_instance_.Shutdown();
  delete file_level_metadata[25].reflection;
  _BattleResultReq_default_instance_.Shutdown();
  delete file_level_metadata[26].reflection;
  _BattleResultRsp_default_instance_.Shutdown();
  delete file_level_metadata[27].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _RechargeNotify_default_instance_.DefaultConstruct();
  _UserInfo_default_instance_.DefaultConstruct();
  _RankInfo_default_instance_.DefaultConstruct();
  _QueryRankReq_default_instance_.DefaultConstruct();
  _QueryRankRsp_default_instance_.DefaultConstruct();
  _RoomPlayerInfo_default_instance_.DefaultConstruct();
  _LoginReq_default_instance_.DefaultConstruct();
  _LoginRsp_default_instance_.DefaultConstruct();
  _MailNumberNotify_default_instance_.DefaultConstruct();
  _MailItem_default_instance_.DefaultConstruct();
  _MailMemo_default_instance_.DefaultConstruct();
  _MailContent_default_instance_.DefaultConstruct();
  _MailFetchListReq_default_instance_.DefaultConstruct();
  _MailFetchListRsp_default_instance_.DefaultConstruct();
  _FetchMailReq_default_instance_.DefaultConstruct();
  _FetchMailRsp_default_instance_.DefaultConstruct();
  _PickMailReq_default_instance_.DefaultConstruct();
  _ShopItemid_default_instance_.DefaultConstruct();
  _PickMailRsp_default_instance_.DefaultConstruct();
  _JoinRoomReq_default_instance_.DefaultConstruct();
  _JoinRoomRsp_default_instance_.DefaultConstruct();
  _JoinRoomEvent_default_instance_.DefaultConstruct();
  _QuitRoomReq_default_instance_.DefaultConstruct();
  _QuitRoomRsp_default_instance_.DefaultConstruct();
  _QuitRoomEvent_default_instance_.DefaultConstruct();
  _StartBattleNotify_default_instance_.DefaultConstruct();
  _BattleResultReq_default_instance_.DefaultConstruct();
  _BattleResultRsp_default_instance_.DefaultConstruct();
  _FetchMailRsp_default_instance_.get_mutable()->content_ = const_cast< ::soapproto::MailContent*>(
      ::soapproto::MailContent::internal_default_instance());
  _JoinRoomEvent_default_instance_.get_mutable()->info_ = const_cast< ::soapproto::RoomPlayerInfo*>(
      ::soapproto::RoomPlayerInfo::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n\nsoap.proto\022\tsoapproto\"\230\001\n\016RechargeNoti"
      "fy\022\022\n\nerror_code\030\001 \001(\005\022\024\n\014error_reason\030\002"
      " \001(\014\022\013\n\003uid\030\003 \001(\005\022\020\n\010diamonds\030\004 \001(\005\022\r\n\005g"
      "olds\030\005 \001(\005\022\r\n\005items\030\006 \001(\014\022\r\n\005gifts\030\007 \001(\014"
      "\022\020\n\010rmbcount\030\010 \001(\005\"v\n\010UserInfo\022\017\n\007user_i"
      "d\030\001 \001(\005\022\020\n\010nickname\030\002 \001(\014\022\020\n\010diamonds\030\003 "
      "\001(\005\022\r\n\005golds\030\004 \001(\005\022\022\n\nmax_socore\030\005 \001(\005\022\022"
      "\n\nlast_score\030\006 \001(\005\"E\n\010RankInfo\022\014\n\004rank\030\001"
      " \001(\005\022\n\n\002id\030\002 \001(\005\022\020\n\010nickname\030\003 \001(\014\022\r\n\005sc"
      "ore\030\004 \001(\005\"/\n\014QueryRankReq\022\020\n\010rankType\030\001 "
      "\001(\005\022\r\n\005range\030\002 \001(\005\"@\n\014QueryRankRsp\022\014\n\004ra"
      "nk\030\001 \001(\005\022\"\n\005infos\030\002 \003(\0132\023.soapproto.Rank"
      "Info\"C\n\016RoomPlayerInfo\022\017\n\007user_id\030\001 \001(\005\022"
      "\020\n\010nickname\030\002 \001(\014\022\016\n\006equips\030\003 \003(\005\"\031\n\010Log"
      "inReq\022\r\n\005token\030\001 \001(\t\"B\n\010LoginRsp\022\016\n\006resu"
      "lt\030\001 \001(\005\022\021\n\ttimestamp\030\002 \001(\005\022\023\n\013milliseco"
      "nd\030\003 \001(\003\"B\n\020MailNumberNotify\022\025\n\rnewMailN"
      "umber\030\001 \001(\005\022\027\n\017totalMailNumber\030\002 \001(\005\"#\n\010"
      "MailItem\022\n\n\002id\030\001 \001(\005\022\013\n\003num\030\002 \001(\005\"N\n\010Mai"
      "lMemo\022\016\n\006mailid\030\001 \001(\005\022\r\n\005title\030\002 \001(\014\022\016\n\006"
      "status\030\003 \001(\005\022\023\n\013extrastatus\030\004 \001(\005\"w\n\013Mai"
      "lContent\022\016\n\006mailid\030\001 \001(\005\022\020\n\010content1\030\002 \001"
      "(\014\022\020\n\010content2\030\003 \001(\014\022\020\n\010content3\030\004 \001(\014\022\""
      "\n\005items\030\005 \003(\0132\023.soapproto.MailItem\"#\n\020Ma"
      "ilFetchListReq\022\017\n\007user_id\030\001 \001(\005\"F\n\020MailF"
      "etchListRsp\022\016\n\006result\030\001 \001(\005\022\"\n\005memos\030\002 \003"
      "(\0132\023.soapproto.MailMemo\"\036\n\014FetchMailReq\022"
      "\016\n\006mailid\030\001 \001(\005\"G\n\014FetchMailRsp\022\016\n\006resul"
      "t\030\001 \001(\005\022\'\n\007content\030\002 \001(\0132\026.soapproto.Mai"
      "lContent\"\035\n\013PickMailReq\022\016\n\006mailid\030\001 \001(\005\""
      "\034\n\nShopItemid\022\016\n\006itemid\030\001 \001(\005\"p\n\013PickMai"
      "lRsp\022\016\n\006result\030\001 \001(\005\022\024\n\014userdiamonds\030\002 \001"
      "(\005\022\021\n\tusergolds\030\003 \001(\005\022(\n\tuseritems\030\004 \003(\013"
      "2\025.soapproto.ShopItemid\",\n\013JoinRoomReq\022\014"
      "\n\004type\030\001 \001(\005\022\017\n\007room_id\030\002 \001(\005\"\233\001\n\013JoinRo"
      "omRsp\022\016\n\006result\030\001 \001(\005\022\017\n\007room_id\030\002 \001(\005\0220"
      "\n\rother_players\030\003 \003(\0132\031.soapproto.RoomPl"
      "ayerInfo\022\023\n\013random_seed\030\004 \001(\005\022\022\n\nstart_t"
      "ime\030\005 \001(\003\022\020\n\010owner_id\030\006 \001(\005\"8\n\rJoinRoomE"
      "vent\022\'\n\004info\030\001 \001(\0132\031.soapproto.RoomPlaye"
      "rInfo\"\036\n\013QuitRoomReq\022\017\n\007user_id\030\001 \001(\005\"\035\n"
      "\013QuitRoomRsp\022\016\n\006result\030\001 \001(\005\" \n\rQuitRoom"
      "Event\022\017\n\007user_id\030\001 \001(\005\"!\n\021StartBattleNot"
      "ify\022\014\n\004time\030\001 \001(\005\".\n\017BattleResultReq\022\014\n\004"
      "type\030\001 \001(\005\022\r\n\005score\030\002 \001(\005\"0\n\017BattleResul"
      "tRsp\022\016\n\006result\030\001 \001(\005\022\r\n\005gifts\030\002 \001(\014*\342\003\n\005"
      "msgId\022\n\n\006unused\020\000\022\017\n\013cmdLoginReq\020d\022\017\n\013cm"
      "dLoginRsp\020e\022\025\n\021cmdRechargeNotify\020f\022\023\n\017cm"
      "dQueryRankReq\020n\022\023\n\017cmdQueryRankRsp\020o\022\022\n\016"
      "cmdJoinRoomReq\020x\022\022\n\016cmdJoinRoomRsp\020y\022\024\n\020"
      "cmdJoinRoomEvent\020z\022\030\n\024cmdStartBattleNoti"
      "fy\020{\022\022\n\016cmdQuitRoomReq\020|\022\022\n\016cmdQuitRoomR"
      "sp\020}\022\024\n\020cmdQuitRoomEvent\020~\022\027\n\022cmdBattleR"
      "esultReq\020\201\001\022\027\n\022cmdBattleResultRsp\020\202\001\022\030\n\023"
      "cmdMailNumberNotify\020\310\001\022\030\n\023cmdMailFetchLi"
      "stReq\020\311\001\022\030\n\023cmdMailFetchListRsp\020\312\001\022\024\n\017cm"
      "dFetchMailReq\020\313\001\022\024\n\017cmdFetchMailRsp\020\314\001\022\023"
      "\n\016cmdPickMailReq\020\315\001\022\023\n\016cmdPickMailRsp\020\316\001"
      "*\327\002\n\nerror_code\022\013\n\007success\020\000\022\022\n\016server_i"
      "s_busy\020\001\022\026\n\022token_verify_error\020\002\022\030\n\024toke"
      "n_verify_expired\020\003\022\030\n\023player_info_invali"
      "d\020\254\002\022\031\n\024weapon_id_non_exists\020\255\002\022\025\n\020money"
      "_non_enough\020\256\002\022\030\n\023weapon_already_have\020\257\002"
      "\022\024\n\017weapon_non_have\020\260\002\022\033\n\026player_already"
      "_in_room\020\221\003\022\027\n\022player_not_in_room\020\222\003\022\024\n\017"
      "mail_none_exist\020\223\003\022\027\n\022mail_alread_picked"
      "\020\224\003\022\025\n\020mail_none_reward\020\225\003b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 2674);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "soap.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_soap_2eproto

const ::google::protobuf::EnumDescriptor* msgId_descriptor() {
  protobuf_soap_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_soap_2eproto::file_level_enum_descriptors[0];
}
bool msgId_IsValid(int value) {
  switch (value) {
    case 0:
    case 100:
    case 101:
    case 102:
    case 110:
    case 111:
    case 120:
    case 121:
    case 122:
    case 123:
    case 124:
    case 125:
    case 126:
    case 129:
    case 130:
    case 200:
    case 201:
    case 202:
    case 203:
    case 204:
    case 205:
    case 206:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* error_code_descriptor() {
  protobuf_soap_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_soap_2eproto::file_level_enum_descriptors[1];
}
bool error_code_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 300:
    case 301:
    case 302:
    case 303:
    case 304:
    case 401:
    case 402:
    case 403:
    case 404:
    case 405:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RechargeNotify::kErrorCodeFieldNumber;
const int RechargeNotify::kErrorReasonFieldNumber;
const int RechargeNotify::kUidFieldNumber;
const int RechargeNotify::kDiamondsFieldNumber;
const int RechargeNotify::kGoldsFieldNumber;
const int RechargeNotify::kItemsFieldNumber;
const int RechargeNotify::kGiftsFieldNumber;
const int RechargeNotify::kRmbcountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RechargeNotify::RechargeNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_soap_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:soapproto.RechargeNotify)
}
RechargeNotify::RechargeNotify(const RechargeNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  error_reason_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.error_reason().size() > 0) {
    error_reason_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.error_reason_);
  }
  items_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.items().size() > 0) {
    items_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.items_);
  }
  gifts_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.gifts().size() > 0) {
    gifts_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.gifts_);
  }
  ::memcpy(&error_code_, &from.error_code_,
    reinterpret_cast<char*>(&rmbcount_) -
    reinterpret_cast<char*>(&error_code_) + sizeof(rmbcount_));
  // @@protoc_insertion_point(copy_constructor:soapproto.RechargeNotify)
}

void RechargeNotify::SharedCtor() {
  error_reason_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  items_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  gifts_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&error_code_, 0, reinterpret_cast<char*>(&rmbcount_) -
    reinterpret_cast<char*>(&error_code_) + sizeof(rmbcount_));
  _cached_size_ = 0;
}

RechargeNotify::~RechargeNotify() {
  // @@protoc_insertion_point(destructor:soapproto.RechargeNotify)
  SharedDtor();
}

void RechargeNotify::SharedDtor() {
  error_reason_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  items_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  gifts_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void RechargeNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RechargeNotify::descriptor() {
  protobuf_soap_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_soap_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RechargeNotify& RechargeNotify::default_instance() {
  protobuf_soap_2eproto::InitDefaults();
  return *internal_default_instance();
}

RechargeNotify* RechargeNotify::New(::google::protobuf::Arena* arena) const {
  RechargeNotify* n = new RechargeNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RechargeNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:soapproto.RechargeNotify)
  error_reason_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  items_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  gifts_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&error_code_, 0, reinterpret_cast<char*>(&rmbcount_) -
    reinterpret_cast<char*>(&error_code_) + sizeof(rmbcount_));
}

bool RechargeNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:soapproto.RechargeNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 error_code = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &error_code_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes error_reason = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_error_reason()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 uid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &uid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 diamonds = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &diamonds_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 golds = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &golds_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes items = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_items()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes gifts = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_gifts()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 rmbcount = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &rmbcount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:soapproto.RechargeNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:soapproto.RechargeNotify)
  return false;
#undef DO_
}

void RechargeNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:soapproto.RechargeNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 error_code = 1;
  if (this->error_code() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->error_code(), output);
  }

  // bytes error_reason = 2;
  if (this->error_reason().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->error_reason(), output);
  }

  // int32 uid = 3;
  if (this->uid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->uid(), output);
  }

  // int32 diamonds = 4;
  if (this->diamonds() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->diamonds(), output);
  }

  // int32 golds = 5;
  if (this->golds() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->golds(), output);
  }

  // bytes items = 6;
  if (this->items().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      6, this->items(), output);
  }

  // bytes gifts = 7;
  if (this->gifts().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      7, this->gifts(), output);
  }

  // int32 rmbcount = 8;
  if (this->rmbcount() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->rmbcount(), output);
  }

  // @@protoc_insertion_point(serialize_end:soapproto.RechargeNotify)
}

::google::protobuf::uint8* RechargeNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:soapproto.RechargeNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 error_code = 1;
  if (this->error_code() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->error_code(), target);
  }

  // bytes error_reason = 2;
  if (this->error_reason().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->error_reason(), target);
  }

  // int32 uid = 3;
  if (this->uid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->uid(), target);
  }

  // int32 diamonds = 4;
  if (this->diamonds() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->diamonds(), target);
  }

  // int32 golds = 5;
  if (this->golds() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->golds(), target);
  }

  // bytes items = 6;
  if (this->items().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        6, this->items(), target);
  }

  // bytes gifts = 7;
  if (this->gifts().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        7, this->gifts(), target);
  }

  // int32 rmbcount = 8;
  if (this->rmbcount() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->rmbcount(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:soapproto.RechargeNotify)
  return target;
}

size_t RechargeNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:soapproto.RechargeNotify)
  size_t total_size = 0;

  // bytes error_reason = 2;
  if (this->error_reason().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->error_reason());
  }

  // bytes items = 6;
  if (this->items().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->items());
  }

  // bytes gifts = 7;
  if (this->gifts().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->gifts());
  }

  // int32 error_code = 1;
  if (this->error_code() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->error_code());
  }

  // int32 uid = 3;
  if (this->uid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->uid());
  }

  // int32 diamonds = 4;
  if (this->diamonds() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->diamonds());
  }

  // int32 golds = 5;
  if (this->golds() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->golds());
  }

  // int32 rmbcount = 8;
  if (this->rmbcount() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->rmbcount());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RechargeNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:soapproto.RechargeNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const RechargeNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RechargeNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:soapproto.RechargeNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:soapproto.RechargeNotify)
    MergeFrom(*source);
  }
}

void RechargeNotify::MergeFrom(const RechargeNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:soapproto.RechargeNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.error_reason().size() > 0) {

    error_reason_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.error_reason_);
  }
  if (from.items().size() > 0) {

    items_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.items_);
  }
  if (from.gifts().size() > 0) {

    gifts_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.gifts_);
  }
  if (from.error_code() != 0) {
    set_error_code(from.error_code());
  }
  if (from.uid() != 0) {
    set_uid(from.uid());
  }
  if (from.diamonds() != 0) {
    set_diamonds(from.diamonds());
  }
  if (from.golds() != 0) {
    set_golds(from.golds());
  }
  if (from.rmbcount() != 0) {
    set_rmbcount(from.rmbcount());
  }
}

void RechargeNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:soapproto.RechargeNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RechargeNotify::CopyFrom(const RechargeNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:soapproto.RechargeNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RechargeNotify::IsInitialized() const {
  return true;
}

void RechargeNotify::Swap(RechargeNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RechargeNotify::InternalSwap(RechargeNotify* other) {
  error_reason_.Swap(&other->error_reason_);
  items_.Swap(&other->items_);
  gifts_.Swap(&other->gifts_);
  std::swap(error_code_, other->error_code_);
  std::swap(uid_, other->uid_);
  std::swap(diamonds_, other->diamonds_);
  std::swap(golds_, other->golds_);
  std::swap(rmbcount_, other->rmbcount_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RechargeNotify::GetMetadata() const {
  protobuf_soap_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_soap_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RechargeNotify

// int32 error_code = 1;
void RechargeNotify::clear_error_code() {
  error_code_ = 0;
}
::google::protobuf::int32 RechargeNotify::error_code() const {
  // @@protoc_insertion_point(field_get:soapproto.RechargeNotify.error_code)
  return error_code_;
}
void RechargeNotify::set_error_code(::google::protobuf::int32 value) {
  
  error_code_ = value;
  // @@protoc_insertion_point(field_set:soapproto.RechargeNotify.error_code)
}

// bytes error_reason = 2;
void RechargeNotify::clear_error_reason() {
  error_reason_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& RechargeNotify::error_reason() const {
  // @@protoc_insertion_point(field_get:soapproto.RechargeNotify.error_reason)
  return error_reason_.GetNoArena();
}
void RechargeNotify::set_error_reason(const ::std::string& value) {
  
  error_reason_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:soapproto.RechargeNotify.error_reason)
}
#if LANG_CXX11
void RechargeNotify::set_error_reason(::std::string&& value) {
  
  error_reason_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:soapproto.RechargeNotify.error_reason)
}
#endif
void RechargeNotify::set_error_reason(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  error_reason_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:soapproto.RechargeNotify.error_reason)
}
void RechargeNotify::set_error_reason(const void* value, size_t size) {
  
  error_reason_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:soapproto.RechargeNotify.error_reason)
}
::std::string* RechargeNotify::mutable_error_reason() {
  
  // @@protoc_insertion_point(field_mutable:soapproto.RechargeNotify.error_reason)
  return error_reason_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RechargeNotify::release_error_reason() {
  // @@protoc_insertion_point(field_release:soapproto.RechargeNotify.error_reason)
  
  return error_reason_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RechargeNotify::set_allocated_error_reason(::std::string* error_reason) {
  if (error_reason != NULL) {
    
  } else {
    
  }
  error_reason_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), error_reason);
  // @@protoc_insertion_point(field_set_allocated:soapproto.RechargeNotify.error_reason)
}

// int32 uid = 3;
void RechargeNotify::clear_uid() {
  uid_ = 0;
}
::google::protobuf::int32 RechargeNotify::uid() const {
  // @@protoc_insertion_point(field_get:soapproto.RechargeNotify.uid)
  return uid_;
}
void RechargeNotify::set_uid(::google::protobuf::int32 value) {
  
  uid_ = value;
  // @@protoc_insertion_point(field_set:soapproto.RechargeNotify.uid)
}

// int32 diamonds = 4;
void RechargeNotify::clear_diamonds() {
  diamonds_ = 0;
}
::google::protobuf::int32 RechargeNotify::diamonds() const {
  // @@protoc_insertion_point(field_get:soapproto.RechargeNotify.diamonds)
  return diamonds_;
}
void RechargeNotify::set_diamonds(::google::protobuf::int32 value) {
  
  diamonds_ = value;
  // @@protoc_insertion_point(field_set:soapproto.RechargeNotify.diamonds)
}

// int32 golds = 5;
void RechargeNotify::clear_golds() {
  golds_ = 0;
}
::google::protobuf::int32 RechargeNotify::golds() const {
  // @@protoc_insertion_point(field_get:soapproto.RechargeNotify.golds)
  return golds_;
}
void RechargeNotify::set_golds(::google::protobuf::int32 value) {
  
  golds_ = value;
  // @@protoc_insertion_point(field_set:soapproto.RechargeNotify.golds)
}

// bytes items = 6;
void RechargeNotify::clear_items() {
  items_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& RechargeNotify::items() const {
  // @@protoc_insertion_point(field_get:soapproto.RechargeNotify.items)
  return items_.GetNoArena();
}
void RechargeNotify::set_items(const ::std::string& value) {
  
  items_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:soapproto.RechargeNotify.items)
}
#if LANG_CXX11
void RechargeNotify::set_items(::std::string&& value) {
  
  items_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:soapproto.RechargeNotify.items)
}
#endif
void RechargeNotify::set_items(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  items_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:soapproto.RechargeNotify.items)
}
void RechargeNotify::set_items(const void* value, size_t size) {
  
  items_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:soapproto.RechargeNotify.items)
}
::std::string* RechargeNotify::mutable_items() {
  
  // @@protoc_insertion_point(field_mutable:soapproto.RechargeNotify.items)
  return items_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RechargeNotify::release_items() {
  // @@protoc_insertion_point(field_release:soapproto.RechargeNotify.items)
  
  return items_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RechargeNotify::set_allocated_items(::std::string* items) {
  if (items != NULL) {
    
  } else {
    
  }
  items_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), items);
  // @@protoc_insertion_point(field_set_allocated:soapproto.RechargeNotify.items)
}

// bytes gifts = 7;
void RechargeNotify::clear_gifts() {
  gifts_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& RechargeNotify::gifts() const {
  // @@protoc_insertion_point(field_get:soapproto.RechargeNotify.gifts)
  return gifts_.GetNoArena();
}
void RechargeNotify::set_gifts(const ::std::string& value) {
  
  gifts_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:soapproto.RechargeNotify.gifts)
}
#if LANG_CXX11
void RechargeNotify::set_gifts(::std::string&& value) {
  
  gifts_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:soapproto.RechargeNotify.gifts)
}
#endif
void RechargeNotify::set_gifts(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  gifts_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:soapproto.RechargeNotify.gifts)
}
void RechargeNotify::set_gifts(const void* value, size_t size) {
  
  gifts_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:soapproto.RechargeNotify.gifts)
}
::std::string* RechargeNotify::mutable_gifts() {
  
  // @@protoc_insertion_point(field_mutable:soapproto.RechargeNotify.gifts)
  return gifts_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RechargeNotify::release_gifts() {
  // @@protoc_insertion_point(field_release:soapproto.RechargeNotify.gifts)
  
  return gifts_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RechargeNotify::set_allocated_gifts(::std::string* gifts) {
  if (gifts != NULL) {
    
  } else {
    
  }
  gifts_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), gifts);
  // @@protoc_insertion_point(field_set_allocated:soapproto.RechargeNotify.gifts)
}

// int32 rmbcount = 8;
void RechargeNotify::clear_rmbcount() {
  rmbcount_ = 0;
}
::google::protobuf::int32 RechargeNotify::rmbcount() const {
  // @@protoc_insertion_point(field_get:soapproto.RechargeNotify.rmbcount)
  return rmbcount_;
}
void RechargeNotify::set_rmbcount(::google::protobuf::int32 value) {
  
  rmbcount_ = value;
  // @@protoc_insertion_point(field_set:soapproto.RechargeNotify.rmbcount)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UserInfo::kUserIdFieldNumber;
const int UserInfo::kNicknameFieldNumber;
const int UserInfo::kDiamondsFieldNumber;
const int UserInfo::kGoldsFieldNumber;
const int UserInfo::kMaxSocoreFieldNumber;
const int UserInfo::kLastScoreFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UserInfo::UserInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_soap_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:soapproto.UserInfo)
}
UserInfo::UserInfo(const UserInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  nickname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.nickname().size() > 0) {
    nickname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nickname_);
  }
  ::memcpy(&user_id_, &from.user_id_,
    reinterpret_cast<char*>(&last_score_) -
    reinterpret_cast<char*>(&user_id_) + sizeof(last_score_));
  // @@protoc_insertion_point(copy_constructor:soapproto.UserInfo)
}

void UserInfo::SharedCtor() {
  nickname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&user_id_, 0, reinterpret_cast<char*>(&last_score_) -
    reinterpret_cast<char*>(&user_id_) + sizeof(last_score_));
  _cached_size_ = 0;
}

UserInfo::~UserInfo() {
  // @@protoc_insertion_point(destructor:soapproto.UserInfo)
  SharedDtor();
}

void UserInfo::SharedDtor() {
  nickname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void UserInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UserInfo::descriptor() {
  protobuf_soap_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_soap_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UserInfo& UserInfo::default_instance() {
  protobuf_soap_2eproto::InitDefaults();
  return *internal_default_instance();
}

UserInfo* UserInfo::New(::google::protobuf::Arena* arena) const {
  UserInfo* n = new UserInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UserInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:soapproto.UserInfo)
  nickname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&user_id_, 0, reinterpret_cast<char*>(&last_score_) -
    reinterpret_cast<char*>(&user_id_) + sizeof(last_score_));
}

bool UserInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:soapproto.UserInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 user_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &user_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes nickname = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_nickname()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 diamonds = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &diamonds_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 golds = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &golds_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 max_socore = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &max_socore_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 last_score = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &last_score_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:soapproto.UserInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:soapproto.UserInfo)
  return false;
#undef DO_
}

void UserInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:soapproto.UserInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 user_id = 1;
  if (this->user_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->user_id(), output);
  }

  // bytes nickname = 2;
  if (this->nickname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->nickname(), output);
  }

  // int32 diamonds = 3;
  if (this->diamonds() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->diamonds(), output);
  }

  // int32 golds = 4;
  if (this->golds() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->golds(), output);
  }

  // int32 max_socore = 5;
  if (this->max_socore() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->max_socore(), output);
  }

  // int32 last_score = 6;
  if (this->last_score() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->last_score(), output);
  }

  // @@protoc_insertion_point(serialize_end:soapproto.UserInfo)
}

::google::protobuf::uint8* UserInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:soapproto.UserInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 user_id = 1;
  if (this->user_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->user_id(), target);
  }

  // bytes nickname = 2;
  if (this->nickname().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->nickname(), target);
  }

  // int32 diamonds = 3;
  if (this->diamonds() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->diamonds(), target);
  }

  // int32 golds = 4;
  if (this->golds() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->golds(), target);
  }

  // int32 max_socore = 5;
  if (this->max_socore() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->max_socore(), target);
  }

  // int32 last_score = 6;
  if (this->last_score() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->last_score(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:soapproto.UserInfo)
  return target;
}

size_t UserInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:soapproto.UserInfo)
  size_t total_size = 0;

  // bytes nickname = 2;
  if (this->nickname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->nickname());
  }

  // int32 user_id = 1;
  if (this->user_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->user_id());
  }

  // int32 diamonds = 3;
  if (this->diamonds() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->diamonds());
  }

  // int32 golds = 4;
  if (this->golds() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->golds());
  }

  // int32 max_socore = 5;
  if (this->max_socore() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->max_socore());
  }

  // int32 last_score = 6;
  if (this->last_score() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->last_score());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UserInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:soapproto.UserInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const UserInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UserInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:soapproto.UserInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:soapproto.UserInfo)
    MergeFrom(*source);
  }
}

void UserInfo::MergeFrom(const UserInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:soapproto.UserInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.nickname().size() > 0) {

    nickname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nickname_);
  }
  if (from.user_id() != 0) {
    set_user_id(from.user_id());
  }
  if (from.diamonds() != 0) {
    set_diamonds(from.diamonds());
  }
  if (from.golds() != 0) {
    set_golds(from.golds());
  }
  if (from.max_socore() != 0) {
    set_max_socore(from.max_socore());
  }
  if (from.last_score() != 0) {
    set_last_score(from.last_score());
  }
}

void UserInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:soapproto.UserInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UserInfo::CopyFrom(const UserInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:soapproto.UserInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserInfo::IsInitialized() const {
  return true;
}

void UserInfo::Swap(UserInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UserInfo::InternalSwap(UserInfo* other) {
  nickname_.Swap(&other->nickname_);
  std::swap(user_id_, other->user_id_);
  std::swap(diamonds_, other->diamonds_);
  std::swap(golds_, other->golds_);
  std::swap(max_socore_, other->max_socore_);
  std::swap(last_score_, other->last_score_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UserInfo::GetMetadata() const {
  protobuf_soap_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_soap_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// UserInfo

// int32 user_id = 1;
void UserInfo::clear_user_id() {
  user_id_ = 0;
}
::google::protobuf::int32 UserInfo::user_id() const {
  // @@protoc_insertion_point(field_get:soapproto.UserInfo.user_id)
  return user_id_;
}
void UserInfo::set_user_id(::google::protobuf::int32 value) {
  
  user_id_ = value;
  // @@protoc_insertion_point(field_set:soapproto.UserInfo.user_id)
}

// bytes nickname = 2;
void UserInfo::clear_nickname() {
  nickname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& UserInfo::nickname() const {
  // @@protoc_insertion_point(field_get:soapproto.UserInfo.nickname)
  return nickname_.GetNoArena();
}
void UserInfo::set_nickname(const ::std::string& value) {
  
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:soapproto.UserInfo.nickname)
}
#if LANG_CXX11
void UserInfo::set_nickname(::std::string&& value) {
  
  nickname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:soapproto.UserInfo.nickname)
}
#endif
void UserInfo::set_nickname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:soapproto.UserInfo.nickname)
}
void UserInfo::set_nickname(const void* value, size_t size) {
  
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:soapproto.UserInfo.nickname)
}
::std::string* UserInfo::mutable_nickname() {
  
  // @@protoc_insertion_point(field_mutable:soapproto.UserInfo.nickname)
  return nickname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* UserInfo::release_nickname() {
  // @@protoc_insertion_point(field_release:soapproto.UserInfo.nickname)
  
  return nickname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void UserInfo::set_allocated_nickname(::std::string* nickname) {
  if (nickname != NULL) {
    
  } else {
    
  }
  nickname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nickname);
  // @@protoc_insertion_point(field_set_allocated:soapproto.UserInfo.nickname)
}

// int32 diamonds = 3;
void UserInfo::clear_diamonds() {
  diamonds_ = 0;
}
::google::protobuf::int32 UserInfo::diamonds() const {
  // @@protoc_insertion_point(field_get:soapproto.UserInfo.diamonds)
  return diamonds_;
}
void UserInfo::set_diamonds(::google::protobuf::int32 value) {
  
  diamonds_ = value;
  // @@protoc_insertion_point(field_set:soapproto.UserInfo.diamonds)
}

// int32 golds = 4;
void UserInfo::clear_golds() {
  golds_ = 0;
}
::google::protobuf::int32 UserInfo::golds() const {
  // @@protoc_insertion_point(field_get:soapproto.UserInfo.golds)
  return golds_;
}
void UserInfo::set_golds(::google::protobuf::int32 value) {
  
  golds_ = value;
  // @@protoc_insertion_point(field_set:soapproto.UserInfo.golds)
}

// int32 max_socore = 5;
void UserInfo::clear_max_socore() {
  max_socore_ = 0;
}
::google::protobuf::int32 UserInfo::max_socore() const {
  // @@protoc_insertion_point(field_get:soapproto.UserInfo.max_socore)
  return max_socore_;
}
void UserInfo::set_max_socore(::google::protobuf::int32 value) {
  
  max_socore_ = value;
  // @@protoc_insertion_point(field_set:soapproto.UserInfo.max_socore)
}

// int32 last_score = 6;
void UserInfo::clear_last_score() {
  last_score_ = 0;
}
::google::protobuf::int32 UserInfo::last_score() const {
  // @@protoc_insertion_point(field_get:soapproto.UserInfo.last_score)
  return last_score_;
}
void UserInfo::set_last_score(::google::protobuf::int32 value) {
  
  last_score_ = value;
  // @@protoc_insertion_point(field_set:soapproto.UserInfo.last_score)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RankInfo::kRankFieldNumber;
const int RankInfo::kIdFieldNumber;
const int RankInfo::kNicknameFieldNumber;
const int RankInfo::kScoreFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RankInfo::RankInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_soap_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:soapproto.RankInfo)
}
RankInfo::RankInfo(const RankInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  nickname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.nickname().size() > 0) {
    nickname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nickname_);
  }
  ::memcpy(&rank_, &from.rank_,
    reinterpret_cast<char*>(&score_) -
    reinterpret_cast<char*>(&rank_) + sizeof(score_));
  // @@protoc_insertion_point(copy_constructor:soapproto.RankInfo)
}

void RankInfo::SharedCtor() {
  nickname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&rank_, 0, reinterpret_cast<char*>(&score_) -
    reinterpret_cast<char*>(&rank_) + sizeof(score_));
  _cached_size_ = 0;
}

RankInfo::~RankInfo() {
  // @@protoc_insertion_point(destructor:soapproto.RankInfo)
  SharedDtor();
}

void RankInfo::SharedDtor() {
  nickname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void RankInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RankInfo::descriptor() {
  protobuf_soap_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_soap_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RankInfo& RankInfo::default_instance() {
  protobuf_soap_2eproto::InitDefaults();
  return *internal_default_instance();
}

RankInfo* RankInfo::New(::google::protobuf::Arena* arena) const {
  RankInfo* n = new RankInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RankInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:soapproto.RankInfo)
  nickname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&rank_, 0, reinterpret_cast<char*>(&score_) -
    reinterpret_cast<char*>(&rank_) + sizeof(score_));
}

bool RankInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:soapproto.RankInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 rank = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &rank_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes nickname = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_nickname()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 score = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &score_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:soapproto.RankInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:soapproto.RankInfo)
  return false;
#undef DO_
}

void RankInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:soapproto.RankInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 rank = 1;
  if (this->rank() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->rank(), output);
  }

  // int32 id = 2;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->id(), output);
  }

  // bytes nickname = 3;
  if (this->nickname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->nickname(), output);
  }

  // int32 score = 4;
  if (this->score() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->score(), output);
  }

  // @@protoc_insertion_point(serialize_end:soapproto.RankInfo)
}

::google::protobuf::uint8* RankInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:soapproto.RankInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 rank = 1;
  if (this->rank() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->rank(), target);
  }

  // int32 id = 2;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->id(), target);
  }

  // bytes nickname = 3;
  if (this->nickname().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->nickname(), target);
  }

  // int32 score = 4;
  if (this->score() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->score(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:soapproto.RankInfo)
  return target;
}

size_t RankInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:soapproto.RankInfo)
  size_t total_size = 0;

  // bytes nickname = 3;
  if (this->nickname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->nickname());
  }

  // int32 rank = 1;
  if (this->rank() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->rank());
  }

  // int32 id = 2;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());
  }

  // int32 score = 4;
  if (this->score() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->score());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RankInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:soapproto.RankInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const RankInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RankInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:soapproto.RankInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:soapproto.RankInfo)
    MergeFrom(*source);
  }
}

void RankInfo::MergeFrom(const RankInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:soapproto.RankInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.nickname().size() > 0) {

    nickname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nickname_);
  }
  if (from.rank() != 0) {
    set_rank(from.rank());
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.score() != 0) {
    set_score(from.score());
  }
}

void RankInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:soapproto.RankInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RankInfo::CopyFrom(const RankInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:soapproto.RankInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RankInfo::IsInitialized() const {
  return true;
}

void RankInfo::Swap(RankInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RankInfo::InternalSwap(RankInfo* other) {
  nickname_.Swap(&other->nickname_);
  std::swap(rank_, other->rank_);
  std::swap(id_, other->id_);
  std::swap(score_, other->score_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RankInfo::GetMetadata() const {
  protobuf_soap_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_soap_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RankInfo

// int32 rank = 1;
void RankInfo::clear_rank() {
  rank_ = 0;
}
::google::protobuf::int32 RankInfo::rank() const {
  // @@protoc_insertion_point(field_get:soapproto.RankInfo.rank)
  return rank_;
}
void RankInfo::set_rank(::google::protobuf::int32 value) {
  
  rank_ = value;
  // @@protoc_insertion_point(field_set:soapproto.RankInfo.rank)
}

// int32 id = 2;
void RankInfo::clear_id() {
  id_ = 0;
}
::google::protobuf::int32 RankInfo::id() const {
  // @@protoc_insertion_point(field_get:soapproto.RankInfo.id)
  return id_;
}
void RankInfo::set_id(::google::protobuf::int32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:soapproto.RankInfo.id)
}

// bytes nickname = 3;
void RankInfo::clear_nickname() {
  nickname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& RankInfo::nickname() const {
  // @@protoc_insertion_point(field_get:soapproto.RankInfo.nickname)
  return nickname_.GetNoArena();
}
void RankInfo::set_nickname(const ::std::string& value) {
  
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:soapproto.RankInfo.nickname)
}
#if LANG_CXX11
void RankInfo::set_nickname(::std::string&& value) {
  
  nickname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:soapproto.RankInfo.nickname)
}
#endif
void RankInfo::set_nickname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:soapproto.RankInfo.nickname)
}
void RankInfo::set_nickname(const void* value, size_t size) {
  
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:soapproto.RankInfo.nickname)
}
::std::string* RankInfo::mutable_nickname() {
  
  // @@protoc_insertion_point(field_mutable:soapproto.RankInfo.nickname)
  return nickname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RankInfo::release_nickname() {
  // @@protoc_insertion_point(field_release:soapproto.RankInfo.nickname)
  
  return nickname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RankInfo::set_allocated_nickname(::std::string* nickname) {
  if (nickname != NULL) {
    
  } else {
    
  }
  nickname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nickname);
  // @@protoc_insertion_point(field_set_allocated:soapproto.RankInfo.nickname)
}

// int32 score = 4;
void RankInfo::clear_score() {
  score_ = 0;
}
::google::protobuf::int32 RankInfo::score() const {
  // @@protoc_insertion_point(field_get:soapproto.RankInfo.score)
  return score_;
}
void RankInfo::set_score(::google::protobuf::int32 value) {
  
  score_ = value;
  // @@protoc_insertion_point(field_set:soapproto.RankInfo.score)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QueryRankReq::kRankTypeFieldNumber;
const int QueryRankReq::kRangeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QueryRankReq::QueryRankReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_soap_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:soapproto.QueryRankReq)
}
QueryRankReq::QueryRankReq(const QueryRankReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&ranktype_, &from.ranktype_,
    reinterpret_cast<char*>(&range_) -
    reinterpret_cast<char*>(&ranktype_) + sizeof(range_));
  // @@protoc_insertion_point(copy_constructor:soapproto.QueryRankReq)
}

void QueryRankReq::SharedCtor() {
  ::memset(&ranktype_, 0, reinterpret_cast<char*>(&range_) -
    reinterpret_cast<char*>(&ranktype_) + sizeof(range_));
  _cached_size_ = 0;
}

QueryRankReq::~QueryRankReq() {
  // @@protoc_insertion_point(destructor:soapproto.QueryRankReq)
  SharedDtor();
}

void QueryRankReq::SharedDtor() {
}

void QueryRankReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QueryRankReq::descriptor() {
  protobuf_soap_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_soap_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const QueryRankReq& QueryRankReq::default_instance() {
  protobuf_soap_2eproto::InitDefaults();
  return *internal_default_instance();
}

QueryRankReq* QueryRankReq::New(::google::protobuf::Arena* arena) const {
  QueryRankReq* n = new QueryRankReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void QueryRankReq::Clear() {
// @@protoc_insertion_point(message_clear_start:soapproto.QueryRankReq)
  ::memset(&ranktype_, 0, reinterpret_cast<char*>(&range_) -
    reinterpret_cast<char*>(&ranktype_) + sizeof(range_));
}

bool QueryRankReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:soapproto.QueryRankReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 rankType = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ranktype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 range = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &range_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:soapproto.QueryRankReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:soapproto.QueryRankReq)
  return false;
#undef DO_
}

void QueryRankReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:soapproto.QueryRankReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 rankType = 1;
  if (this->ranktype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->ranktype(), output);
  }

  // int32 range = 2;
  if (this->range() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->range(), output);
  }

  // @@protoc_insertion_point(serialize_end:soapproto.QueryRankReq)
}

::google::protobuf::uint8* QueryRankReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:soapproto.QueryRankReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 rankType = 1;
  if (this->ranktype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->ranktype(), target);
  }

  // int32 range = 2;
  if (this->range() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->range(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:soapproto.QueryRankReq)
  return target;
}

size_t QueryRankReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:soapproto.QueryRankReq)
  size_t total_size = 0;

  // int32 rankType = 1;
  if (this->ranktype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->ranktype());
  }

  // int32 range = 2;
  if (this->range() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->range());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QueryRankReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:soapproto.QueryRankReq)
  GOOGLE_DCHECK_NE(&from, this);
  const QueryRankReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const QueryRankReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:soapproto.QueryRankReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:soapproto.QueryRankReq)
    MergeFrom(*source);
  }
}

void QueryRankReq::MergeFrom(const QueryRankReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:soapproto.QueryRankReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.ranktype() != 0) {
    set_ranktype(from.ranktype());
  }
  if (from.range() != 0) {
    set_range(from.range());
  }
}

void QueryRankReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:soapproto.QueryRankReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QueryRankReq::CopyFrom(const QueryRankReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:soapproto.QueryRankReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryRankReq::IsInitialized() const {
  return true;
}

void QueryRankReq::Swap(QueryRankReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QueryRankReq::InternalSwap(QueryRankReq* other) {
  std::swap(ranktype_, other->ranktype_);
  std::swap(range_, other->range_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata QueryRankReq::GetMetadata() const {
  protobuf_soap_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_soap_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// QueryRankReq

// int32 rankType = 1;
void QueryRankReq::clear_ranktype() {
  ranktype_ = 0;
}
::google::protobuf::int32 QueryRankReq::ranktype() const {
  // @@protoc_insertion_point(field_get:soapproto.QueryRankReq.rankType)
  return ranktype_;
}
void QueryRankReq::set_ranktype(::google::protobuf::int32 value) {
  
  ranktype_ = value;
  // @@protoc_insertion_point(field_set:soapproto.QueryRankReq.rankType)
}

// int32 range = 2;
void QueryRankReq::clear_range() {
  range_ = 0;
}
::google::protobuf::int32 QueryRankReq::range() const {
  // @@protoc_insertion_point(field_get:soapproto.QueryRankReq.range)
  return range_;
}
void QueryRankReq::set_range(::google::protobuf::int32 value) {
  
  range_ = value;
  // @@protoc_insertion_point(field_set:soapproto.QueryRankReq.range)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QueryRankRsp::kRankFieldNumber;
const int QueryRankRsp::kInfosFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QueryRankRsp::QueryRankRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_soap_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:soapproto.QueryRankRsp)
}
QueryRankRsp::QueryRankRsp(const QueryRankRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      infos_(from.infos_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  rank_ = from.rank_;
  // @@protoc_insertion_point(copy_constructor:soapproto.QueryRankRsp)
}

void QueryRankRsp::SharedCtor() {
  rank_ = 0;
  _cached_size_ = 0;
}

QueryRankRsp::~QueryRankRsp() {
  // @@protoc_insertion_point(destructor:soapproto.QueryRankRsp)
  SharedDtor();
}

void QueryRankRsp::SharedDtor() {
}

void QueryRankRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QueryRankRsp::descriptor() {
  protobuf_soap_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_soap_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const QueryRankRsp& QueryRankRsp::default_instance() {
  protobuf_soap_2eproto::InitDefaults();
  return *internal_default_instance();
}

QueryRankRsp* QueryRankRsp::New(::google::protobuf::Arena* arena) const {
  QueryRankRsp* n = new QueryRankRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void QueryRankRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:soapproto.QueryRankRsp)
  infos_.Clear();
  rank_ = 0;
}

bool QueryRankRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:soapproto.QueryRankRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 rank = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &rank_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .soapproto.RankInfo infos = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_infos()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:soapproto.QueryRankRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:soapproto.QueryRankRsp)
  return false;
#undef DO_
}

void QueryRankRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:soapproto.QueryRankRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 rank = 1;
  if (this->rank() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->rank(), output);
  }

  // repeated .soapproto.RankInfo infos = 2;
  for (unsigned int i = 0, n = this->infos_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->infos(i), output);
  }

  // @@protoc_insertion_point(serialize_end:soapproto.QueryRankRsp)
}

::google::protobuf::uint8* QueryRankRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:soapproto.QueryRankRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 rank = 1;
  if (this->rank() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->rank(), target);
  }

  // repeated .soapproto.RankInfo infos = 2;
  for (unsigned int i = 0, n = this->infos_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->infos(i), deterministic, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:soapproto.QueryRankRsp)
  return target;
}

size_t QueryRankRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:soapproto.QueryRankRsp)
  size_t total_size = 0;

  // repeated .soapproto.RankInfo infos = 2;
  {
    unsigned int count = this->infos_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->infos(i));
    }
  }

  // int32 rank = 1;
  if (this->rank() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->rank());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QueryRankRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:soapproto.QueryRankRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const QueryRankRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const QueryRankRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:soapproto.QueryRankRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:soapproto.QueryRankRsp)
    MergeFrom(*source);
  }
}

void QueryRankRsp::MergeFrom(const QueryRankRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:soapproto.QueryRankRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  infos_.MergeFrom(from.infos_);
  if (from.rank() != 0) {
    set_rank(from.rank());
  }
}

void QueryRankRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:soapproto.QueryRankRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QueryRankRsp::CopyFrom(const QueryRankRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:soapproto.QueryRankRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryRankRsp::IsInitialized() const {
  return true;
}

void QueryRankRsp::Swap(QueryRankRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QueryRankRsp::InternalSwap(QueryRankRsp* other) {
  infos_.InternalSwap(&other->infos_);
  std::swap(rank_, other->rank_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata QueryRankRsp::GetMetadata() const {
  protobuf_soap_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_soap_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// QueryRankRsp

// int32 rank = 1;
void QueryRankRsp::clear_rank() {
  rank_ = 0;
}
::google::protobuf::int32 QueryRankRsp::rank() const {
  // @@protoc_insertion_point(field_get:soapproto.QueryRankRsp.rank)
  return rank_;
}
void QueryRankRsp::set_rank(::google::protobuf::int32 value) {
  
  rank_ = value;
  // @@protoc_insertion_point(field_set:soapproto.QueryRankRsp.rank)
}

// repeated .soapproto.RankInfo infos = 2;
int QueryRankRsp::infos_size() const {
  return infos_.size();
}
void QueryRankRsp::clear_infos() {
  infos_.Clear();
}
const ::soapproto::RankInfo& QueryRankRsp::infos(int index) const {
  // @@protoc_insertion_point(field_get:soapproto.QueryRankRsp.infos)
  return infos_.Get(index);
}
::soapproto::RankInfo* QueryRankRsp::mutable_infos(int index) {
  // @@protoc_insertion_point(field_mutable:soapproto.QueryRankRsp.infos)
  return infos_.Mutable(index);
}
::soapproto::RankInfo* QueryRankRsp::add_infos() {
  // @@protoc_insertion_point(field_add:soapproto.QueryRankRsp.infos)
  return infos_.Add();
}
::google::protobuf::RepeatedPtrField< ::soapproto::RankInfo >*
QueryRankRsp::mutable_infos() {
  // @@protoc_insertion_point(field_mutable_list:soapproto.QueryRankRsp.infos)
  return &infos_;
}
const ::google::protobuf::RepeatedPtrField< ::soapproto::RankInfo >&
QueryRankRsp::infos() const {
  // @@protoc_insertion_point(field_list:soapproto.QueryRankRsp.infos)
  return infos_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RoomPlayerInfo::kUserIdFieldNumber;
const int RoomPlayerInfo::kNicknameFieldNumber;
const int RoomPlayerInfo::kEquipsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RoomPlayerInfo::RoomPlayerInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_soap_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:soapproto.RoomPlayerInfo)
}
RoomPlayerInfo::RoomPlayerInfo(const RoomPlayerInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      equips_(from.equips_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  nickname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.nickname().size() > 0) {
    nickname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nickname_);
  }
  user_id_ = from.user_id_;
  // @@protoc_insertion_point(copy_constructor:soapproto.RoomPlayerInfo)
}

void RoomPlayerInfo::SharedCtor() {
  nickname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_id_ = 0;
  _cached_size_ = 0;
}

RoomPlayerInfo::~RoomPlayerInfo() {
  // @@protoc_insertion_point(destructor:soapproto.RoomPlayerInfo)
  SharedDtor();
}

void RoomPlayerInfo::SharedDtor() {
  nickname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void RoomPlayerInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RoomPlayerInfo::descriptor() {
  protobuf_soap_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_soap_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RoomPlayerInfo& RoomPlayerInfo::default_instance() {
  protobuf_soap_2eproto::InitDefaults();
  return *internal_default_instance();
}

RoomPlayerInfo* RoomPlayerInfo::New(::google::protobuf::Arena* arena) const {
  RoomPlayerInfo* n = new RoomPlayerInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RoomPlayerInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:soapproto.RoomPlayerInfo)
  equips_.Clear();
  nickname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_id_ = 0;
}

bool RoomPlayerInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:soapproto.RoomPlayerInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 user_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &user_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes nickname = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_nickname()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 equips = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_equips())));
        } else if (static_cast< ::google::protobuf::uint8>(tag) ==
                   static_cast< ::google::protobuf::uint8>(24u)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 26u, input, this->mutable_equips())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:soapproto.RoomPlayerInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:soapproto.RoomPlayerInfo)
  return false;
#undef DO_
}

void RoomPlayerInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:soapproto.RoomPlayerInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 user_id = 1;
  if (this->user_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->user_id(), output);
  }

  // bytes nickname = 2;
  if (this->nickname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->nickname(), output);
  }

  // repeated int32 equips = 3;
  if (this->equips_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(3, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_equips_cached_byte_size_);
  }
  for (int i = 0, n = this->equips_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->equips(i), output);
  }

  // @@protoc_insertion_point(serialize_end:soapproto.RoomPlayerInfo)
}

::google::protobuf::uint8* RoomPlayerInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:soapproto.RoomPlayerInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 user_id = 1;
  if (this->user_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->user_id(), target);
  }

  // bytes nickname = 2;
  if (this->nickname().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->nickname(), target);
  }

  // repeated int32 equips = 3;
  if (this->equips_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      3,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _equips_cached_byte_size_, target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->equips_, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:soapproto.RoomPlayerInfo)
  return target;
}

size_t RoomPlayerInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:soapproto.RoomPlayerInfo)
  size_t total_size = 0;

  // repeated int32 equips = 3;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->equips_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _equips_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // bytes nickname = 2;
  if (this->nickname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->nickname());
  }

  // int32 user_id = 1;
  if (this->user_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->user_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RoomPlayerInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:soapproto.RoomPlayerInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const RoomPlayerInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RoomPlayerInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:soapproto.RoomPlayerInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:soapproto.RoomPlayerInfo)
    MergeFrom(*source);
  }
}

void RoomPlayerInfo::MergeFrom(const RoomPlayerInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:soapproto.RoomPlayerInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  equips_.MergeFrom(from.equips_);
  if (from.nickname().size() > 0) {

    nickname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nickname_);
  }
  if (from.user_id() != 0) {
    set_user_id(from.user_id());
  }
}

void RoomPlayerInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:soapproto.RoomPlayerInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RoomPlayerInfo::CopyFrom(const RoomPlayerInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:soapproto.RoomPlayerInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RoomPlayerInfo::IsInitialized() const {
  return true;
}

void RoomPlayerInfo::Swap(RoomPlayerInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RoomPlayerInfo::InternalSwap(RoomPlayerInfo* other) {
  equips_.InternalSwap(&other->equips_);
  nickname_.Swap(&other->nickname_);
  std::swap(user_id_, other->user_id_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RoomPlayerInfo::GetMetadata() const {
  protobuf_soap_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_soap_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RoomPlayerInfo

// int32 user_id = 1;
void RoomPlayerInfo::clear_user_id() {
  user_id_ = 0;
}
::google::protobuf::int32 RoomPlayerInfo::user_id() const {
  // @@protoc_insertion_point(field_get:soapproto.RoomPlayerInfo.user_id)
  return user_id_;
}
void RoomPlayerInfo::set_user_id(::google::protobuf::int32 value) {
  
  user_id_ = value;
  // @@protoc_insertion_point(field_set:soapproto.RoomPlayerInfo.user_id)
}

// bytes nickname = 2;
void RoomPlayerInfo::clear_nickname() {
  nickname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& RoomPlayerInfo::nickname() const {
  // @@protoc_insertion_point(field_get:soapproto.RoomPlayerInfo.nickname)
  return nickname_.GetNoArena();
}
void RoomPlayerInfo::set_nickname(const ::std::string& value) {
  
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:soapproto.RoomPlayerInfo.nickname)
}
#if LANG_CXX11
void RoomPlayerInfo::set_nickname(::std::string&& value) {
  
  nickname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:soapproto.RoomPlayerInfo.nickname)
}
#endif
void RoomPlayerInfo::set_nickname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:soapproto.RoomPlayerInfo.nickname)
}
void RoomPlayerInfo::set_nickname(const void* value, size_t size) {
  
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:soapproto.RoomPlayerInfo.nickname)
}
::std::string* RoomPlayerInfo::mutable_nickname() {
  
  // @@protoc_insertion_point(field_mutable:soapproto.RoomPlayerInfo.nickname)
  return nickname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RoomPlayerInfo::release_nickname() {
  // @@protoc_insertion_point(field_release:soapproto.RoomPlayerInfo.nickname)
  
  return nickname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RoomPlayerInfo::set_allocated_nickname(::std::string* nickname) {
  if (nickname != NULL) {
    
  } else {
    
  }
  nickname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nickname);
  // @@protoc_insertion_point(field_set_allocated:soapproto.RoomPlayerInfo.nickname)
}

// repeated int32 equips = 3;
int RoomPlayerInfo::equips_size() const {
  return equips_.size();
}
void RoomPlayerInfo::clear_equips() {
  equips_.Clear();
}
::google::protobuf::int32 RoomPlayerInfo::equips(int index) const {
  // @@protoc_insertion_point(field_get:soapproto.RoomPlayerInfo.equips)
  return equips_.Get(index);
}
void RoomPlayerInfo::set_equips(int index, ::google::protobuf::int32 value) {
  equips_.Set(index, value);
  // @@protoc_insertion_point(field_set:soapproto.RoomPlayerInfo.equips)
}
void RoomPlayerInfo::add_equips(::google::protobuf::int32 value) {
  equips_.Add(value);
  // @@protoc_insertion_point(field_add:soapproto.RoomPlayerInfo.equips)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
RoomPlayerInfo::equips() const {
  // @@protoc_insertion_point(field_list:soapproto.RoomPlayerInfo.equips)
  return equips_;
}
::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
RoomPlayerInfo::mutable_equips() {
  // @@protoc_insertion_point(field_mutable_list:soapproto.RoomPlayerInfo.equips)
  return &equips_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LoginReq::kTokenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LoginReq::LoginReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_soap_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:soapproto.LoginReq)
}
LoginReq::LoginReq(const LoginReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.token().size() > 0) {
    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  // @@protoc_insertion_point(copy_constructor:soapproto.LoginReq)
}

void LoginReq::SharedCtor() {
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

LoginReq::~LoginReq() {
  // @@protoc_insertion_point(destructor:soapproto.LoginReq)
  SharedDtor();
}

void LoginReq::SharedDtor() {
  token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void LoginReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LoginReq::descriptor() {
  protobuf_soap_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_soap_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LoginReq& LoginReq::default_instance() {
  protobuf_soap_2eproto::InitDefaults();
  return *internal_default_instance();
}

LoginReq* LoginReq::New(::google::protobuf::Arena* arena) const {
  LoginReq* n = new LoginReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LoginReq::Clear() {
// @@protoc_insertion_point(message_clear_start:soapproto.LoginReq)
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool LoginReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:soapproto.LoginReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string token = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->token().data(), this->token().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "soapproto.LoginReq.token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:soapproto.LoginReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:soapproto.LoginReq)
  return false;
#undef DO_
}

void LoginReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:soapproto.LoginReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string token = 1;
  if (this->token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->token().data(), this->token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "soapproto.LoginReq.token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->token(), output);
  }

  // @@protoc_insertion_point(serialize_end:soapproto.LoginReq)
}

::google::protobuf::uint8* LoginReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:soapproto.LoginReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string token = 1;
  if (this->token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->token().data(), this->token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "soapproto.LoginReq.token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->token(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:soapproto.LoginReq)
  return target;
}

size_t LoginReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:soapproto.LoginReq)
  size_t total_size = 0;

  // string token = 1;
  if (this->token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->token());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LoginReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:soapproto.LoginReq)
  GOOGLE_DCHECK_NE(&from, this);
  const LoginReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LoginReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:soapproto.LoginReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:soapproto.LoginReq)
    MergeFrom(*source);
  }
}

void LoginReq::MergeFrom(const LoginReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:soapproto.LoginReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.token().size() > 0) {

    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
}

void LoginReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:soapproto.LoginReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LoginReq::CopyFrom(const LoginReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:soapproto.LoginReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LoginReq::IsInitialized() const {
  return true;
}

void LoginReq::Swap(LoginReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LoginReq::InternalSwap(LoginReq* other) {
  token_.Swap(&other->token_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LoginReq::GetMetadata() const {
  protobuf_soap_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_soap_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// LoginReq

// string token = 1;
void LoginReq::clear_token() {
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& LoginReq::token() const {
  // @@protoc_insertion_point(field_get:soapproto.LoginReq.token)
  return token_.GetNoArena();
}
void LoginReq::set_token(const ::std::string& value) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:soapproto.LoginReq.token)
}
#if LANG_CXX11
void LoginReq::set_token(::std::string&& value) {
  
  token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:soapproto.LoginReq.token)
}
#endif
void LoginReq::set_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:soapproto.LoginReq.token)
}
void LoginReq::set_token(const char* value, size_t size) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:soapproto.LoginReq.token)
}
::std::string* LoginReq::mutable_token() {
  
  // @@protoc_insertion_point(field_mutable:soapproto.LoginReq.token)
  return token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* LoginReq::release_token() {
  // @@protoc_insertion_point(field_release:soapproto.LoginReq.token)
  
  return token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void LoginReq::set_allocated_token(::std::string* token) {
  if (token != NULL) {
    
  } else {
    
  }
  token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), token);
  // @@protoc_insertion_point(field_set_allocated:soapproto.LoginReq.token)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LoginRsp::kResultFieldNumber;
const int LoginRsp::kTimestampFieldNumber;
const int LoginRsp::kMillisecondFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LoginRsp::LoginRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_soap_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:soapproto.LoginRsp)
}
LoginRsp::LoginRsp(const LoginRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&result_, &from.result_,
    reinterpret_cast<char*>(&millisecond_) -
    reinterpret_cast<char*>(&result_) + sizeof(millisecond_));
  // @@protoc_insertion_point(copy_constructor:soapproto.LoginRsp)
}

void LoginRsp::SharedCtor() {
  ::memset(&result_, 0, reinterpret_cast<char*>(&millisecond_) -
    reinterpret_cast<char*>(&result_) + sizeof(millisecond_));
  _cached_size_ = 0;
}

LoginRsp::~LoginRsp() {
  // @@protoc_insertion_point(destructor:soapproto.LoginRsp)
  SharedDtor();
}

void LoginRsp::SharedDtor() {
}

void LoginRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LoginRsp::descriptor() {
  protobuf_soap_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_soap_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LoginRsp& LoginRsp::default_instance() {
  protobuf_soap_2eproto::InitDefaults();
  return *internal_default_instance();
}

LoginRsp* LoginRsp::New(::google::protobuf::Arena* arena) const {
  LoginRsp* n = new LoginRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LoginRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:soapproto.LoginRsp)
  ::memset(&result_, 0, reinterpret_cast<char*>(&millisecond_) -
    reinterpret_cast<char*>(&result_) + sizeof(millisecond_));
}

bool LoginRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:soapproto.LoginRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 result = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 timestamp = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 millisecond = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &millisecond_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:soapproto.LoginRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:soapproto.LoginRsp)
  return false;
#undef DO_
}

void LoginRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:soapproto.LoginRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 result = 1;
  if (this->result() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result(), output);
  }

  // int32 timestamp = 2;
  if (this->timestamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->timestamp(), output);
  }

  // int64 millisecond = 3;
  if (this->millisecond() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->millisecond(), output);
  }

  // @@protoc_insertion_point(serialize_end:soapproto.LoginRsp)
}

::google::protobuf::uint8* LoginRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:soapproto.LoginRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 result = 1;
  if (this->result() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result(), target);
  }

  // int32 timestamp = 2;
  if (this->timestamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->timestamp(), target);
  }

  // int64 millisecond = 3;
  if (this->millisecond() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->millisecond(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:soapproto.LoginRsp)
  return target;
}

size_t LoginRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:soapproto.LoginRsp)
  size_t total_size = 0;

  // int32 result = 1;
  if (this->result() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->result());
  }

  // int32 timestamp = 2;
  if (this->timestamp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->timestamp());
  }

  // int64 millisecond = 3;
  if (this->millisecond() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->millisecond());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LoginRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:soapproto.LoginRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const LoginRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LoginRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:soapproto.LoginRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:soapproto.LoginRsp)
    MergeFrom(*source);
  }
}

void LoginRsp::MergeFrom(const LoginRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:soapproto.LoginRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.result() != 0) {
    set_result(from.result());
  }
  if (from.timestamp() != 0) {
    set_timestamp(from.timestamp());
  }
  if (from.millisecond() != 0) {
    set_millisecond(from.millisecond());
  }
}

void LoginRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:soapproto.LoginRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LoginRsp::CopyFrom(const LoginRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:soapproto.LoginRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LoginRsp::IsInitialized() const {
  return true;
}

void LoginRsp::Swap(LoginRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LoginRsp::InternalSwap(LoginRsp* other) {
  std::swap(result_, other->result_);
  std::swap(timestamp_, other->timestamp_);
  std::swap(millisecond_, other->millisecond_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LoginRsp::GetMetadata() const {
  protobuf_soap_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_soap_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// LoginRsp

// int32 result = 1;
void LoginRsp::clear_result() {
  result_ = 0;
}
::google::protobuf::int32 LoginRsp::result() const {
  // @@protoc_insertion_point(field_get:soapproto.LoginRsp.result)
  return result_;
}
void LoginRsp::set_result(::google::protobuf::int32 value) {
  
  result_ = value;
  // @@protoc_insertion_point(field_set:soapproto.LoginRsp.result)
}

// int32 timestamp = 2;
void LoginRsp::clear_timestamp() {
  timestamp_ = 0;
}
::google::protobuf::int32 LoginRsp::timestamp() const {
  // @@protoc_insertion_point(field_get:soapproto.LoginRsp.timestamp)
  return timestamp_;
}
void LoginRsp::set_timestamp(::google::protobuf::int32 value) {
  
  timestamp_ = value;
  // @@protoc_insertion_point(field_set:soapproto.LoginRsp.timestamp)
}

// int64 millisecond = 3;
void LoginRsp::clear_millisecond() {
  millisecond_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 LoginRsp::millisecond() const {
  // @@protoc_insertion_point(field_get:soapproto.LoginRsp.millisecond)
  return millisecond_;
}
void LoginRsp::set_millisecond(::google::protobuf::int64 value) {
  
  millisecond_ = value;
  // @@protoc_insertion_point(field_set:soapproto.LoginRsp.millisecond)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MailNumberNotify::kNewMailNumberFieldNumber;
const int MailNumberNotify::kTotalMailNumberFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MailNumberNotify::MailNumberNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_soap_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:soapproto.MailNumberNotify)
}
MailNumberNotify::MailNumberNotify(const MailNumberNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&newmailnumber_, &from.newmailnumber_,
    reinterpret_cast<char*>(&totalmailnumber_) -
    reinterpret_cast<char*>(&newmailnumber_) + sizeof(totalmailnumber_));
  // @@protoc_insertion_point(copy_constructor:soapproto.MailNumberNotify)
}

void MailNumberNotify::SharedCtor() {
  ::memset(&newmailnumber_, 0, reinterpret_cast<char*>(&totalmailnumber_) -
    reinterpret_cast<char*>(&newmailnumber_) + sizeof(totalmailnumber_));
  _cached_size_ = 0;
}

MailNumberNotify::~MailNumberNotify() {
  // @@protoc_insertion_point(destructor:soapproto.MailNumberNotify)
  SharedDtor();
}

void MailNumberNotify::SharedDtor() {
}

void MailNumberNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MailNumberNotify::descriptor() {
  protobuf_soap_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_soap_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MailNumberNotify& MailNumberNotify::default_instance() {
  protobuf_soap_2eproto::InitDefaults();
  return *internal_default_instance();
}

MailNumberNotify* MailNumberNotify::New(::google::protobuf::Arena* arena) const {
  MailNumberNotify* n = new MailNumberNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MailNumberNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:soapproto.MailNumberNotify)
  ::memset(&newmailnumber_, 0, reinterpret_cast<char*>(&totalmailnumber_) -
    reinterpret_cast<char*>(&newmailnumber_) + sizeof(totalmailnumber_));
}

bool MailNumberNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:soapproto.MailNumberNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 newMailNumber = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &newmailnumber_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 totalMailNumber = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &totalmailnumber_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:soapproto.MailNumberNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:soapproto.MailNumberNotify)
  return false;
#undef DO_
}

void MailNumberNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:soapproto.MailNumberNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 newMailNumber = 1;
  if (this->newmailnumber() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->newmailnumber(), output);
  }

  // int32 totalMailNumber = 2;
  if (this->totalmailnumber() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->totalmailnumber(), output);
  }

  // @@protoc_insertion_point(serialize_end:soapproto.MailNumberNotify)
}

::google::protobuf::uint8* MailNumberNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:soapproto.MailNumberNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 newMailNumber = 1;
  if (this->newmailnumber() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->newmailnumber(), target);
  }

  // int32 totalMailNumber = 2;
  if (this->totalmailnumber() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->totalmailnumber(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:soapproto.MailNumberNotify)
  return target;
}

size_t MailNumberNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:soapproto.MailNumberNotify)
  size_t total_size = 0;

  // int32 newMailNumber = 1;
  if (this->newmailnumber() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->newmailnumber());
  }

  // int32 totalMailNumber = 2;
  if (this->totalmailnumber() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->totalmailnumber());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MailNumberNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:soapproto.MailNumberNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const MailNumberNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MailNumberNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:soapproto.MailNumberNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:soapproto.MailNumberNotify)
    MergeFrom(*source);
  }
}

void MailNumberNotify::MergeFrom(const MailNumberNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:soapproto.MailNumberNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.newmailnumber() != 0) {
    set_newmailnumber(from.newmailnumber());
  }
  if (from.totalmailnumber() != 0) {
    set_totalmailnumber(from.totalmailnumber());
  }
}

void MailNumberNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:soapproto.MailNumberNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MailNumberNotify::CopyFrom(const MailNumberNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:soapproto.MailNumberNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MailNumberNotify::IsInitialized() const {
  return true;
}

void MailNumberNotify::Swap(MailNumberNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MailNumberNotify::InternalSwap(MailNumberNotify* other) {
  std::swap(newmailnumber_, other->newmailnumber_);
  std::swap(totalmailnumber_, other->totalmailnumber_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MailNumberNotify::GetMetadata() const {
  protobuf_soap_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_soap_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MailNumberNotify

// int32 newMailNumber = 1;
void MailNumberNotify::clear_newmailnumber() {
  newmailnumber_ = 0;
}
::google::protobuf::int32 MailNumberNotify::newmailnumber() const {
  // @@protoc_insertion_point(field_get:soapproto.MailNumberNotify.newMailNumber)
  return newmailnumber_;
}
void MailNumberNotify::set_newmailnumber(::google::protobuf::int32 value) {
  
  newmailnumber_ = value;
  // @@protoc_insertion_point(field_set:soapproto.MailNumberNotify.newMailNumber)
}

// int32 totalMailNumber = 2;
void MailNumberNotify::clear_totalmailnumber() {
  totalmailnumber_ = 0;
}
::google::protobuf::int32 MailNumberNotify::totalmailnumber() const {
  // @@protoc_insertion_point(field_get:soapproto.MailNumberNotify.totalMailNumber)
  return totalmailnumber_;
}
void MailNumberNotify::set_totalmailnumber(::google::protobuf::int32 value) {
  
  totalmailnumber_ = value;
  // @@protoc_insertion_point(field_set:soapproto.MailNumberNotify.totalMailNumber)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MailItem::kIdFieldNumber;
const int MailItem::kNumFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MailItem::MailItem()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_soap_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:soapproto.MailItem)
}
MailItem::MailItem(const MailItem& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&id_, &from.id_,
    reinterpret_cast<char*>(&num_) -
    reinterpret_cast<char*>(&id_) + sizeof(num_));
  // @@protoc_insertion_point(copy_constructor:soapproto.MailItem)
}

void MailItem::SharedCtor() {
  ::memset(&id_, 0, reinterpret_cast<char*>(&num_) -
    reinterpret_cast<char*>(&id_) + sizeof(num_));
  _cached_size_ = 0;
}

MailItem::~MailItem() {
  // @@protoc_insertion_point(destructor:soapproto.MailItem)
  SharedDtor();
}

void MailItem::SharedDtor() {
}

void MailItem::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MailItem::descriptor() {
  protobuf_soap_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_soap_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MailItem& MailItem::default_instance() {
  protobuf_soap_2eproto::InitDefaults();
  return *internal_default_instance();
}

MailItem* MailItem::New(::google::protobuf::Arena* arena) const {
  MailItem* n = new MailItem;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MailItem::Clear() {
// @@protoc_insertion_point(message_clear_start:soapproto.MailItem)
  ::memset(&id_, 0, reinterpret_cast<char*>(&num_) -
    reinterpret_cast<char*>(&id_) + sizeof(num_));
}

bool MailItem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:soapproto.MailItem)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 num = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &num_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:soapproto.MailItem)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:soapproto.MailItem)
  return false;
#undef DO_
}

void MailItem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:soapproto.MailItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // int32 num = 2;
  if (this->num() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->num(), output);
  }

  // @@protoc_insertion_point(serialize_end:soapproto.MailItem)
}

::google::protobuf::uint8* MailItem::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:soapproto.MailItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // int32 num = 2;
  if (this->num() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->num(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:soapproto.MailItem)
  return target;
}

size_t MailItem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:soapproto.MailItem)
  size_t total_size = 0;

  // int32 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());
  }

  // int32 num = 2;
  if (this->num() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->num());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MailItem::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:soapproto.MailItem)
  GOOGLE_DCHECK_NE(&from, this);
  const MailItem* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MailItem>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:soapproto.MailItem)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:soapproto.MailItem)
    MergeFrom(*source);
  }
}

void MailItem::MergeFrom(const MailItem& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:soapproto.MailItem)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.num() != 0) {
    set_num(from.num());
  }
}

void MailItem::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:soapproto.MailItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MailItem::CopyFrom(const MailItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:soapproto.MailItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MailItem::IsInitialized() const {
  return true;
}

void MailItem::Swap(MailItem* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MailItem::InternalSwap(MailItem* other) {
  std::swap(id_, other->id_);
  std::swap(num_, other->num_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MailItem::GetMetadata() const {
  protobuf_soap_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_soap_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MailItem

// int32 id = 1;
void MailItem::clear_id() {
  id_ = 0;
}
::google::protobuf::int32 MailItem::id() const {
  // @@protoc_insertion_point(field_get:soapproto.MailItem.id)
  return id_;
}
void MailItem::set_id(::google::protobuf::int32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:soapproto.MailItem.id)
}

// int32 num = 2;
void MailItem::clear_num() {
  num_ = 0;
}
::google::protobuf::int32 MailItem::num() const {
  // @@protoc_insertion_point(field_get:soapproto.MailItem.num)
  return num_;
}
void MailItem::set_num(::google::protobuf::int32 value) {
  
  num_ = value;
  // @@protoc_insertion_point(field_set:soapproto.MailItem.num)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MailMemo::kMailidFieldNumber;
const int MailMemo::kTitleFieldNumber;
const int MailMemo::kStatusFieldNumber;
const int MailMemo::kExtrastatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MailMemo::MailMemo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_soap_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:soapproto.MailMemo)
}
MailMemo::MailMemo(const MailMemo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.title().size() > 0) {
    title_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.title_);
  }
  ::memcpy(&mailid_, &from.mailid_,
    reinterpret_cast<char*>(&extrastatus_) -
    reinterpret_cast<char*>(&mailid_) + sizeof(extrastatus_));
  // @@protoc_insertion_point(copy_constructor:soapproto.MailMemo)
}

void MailMemo::SharedCtor() {
  title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&mailid_, 0, reinterpret_cast<char*>(&extrastatus_) -
    reinterpret_cast<char*>(&mailid_) + sizeof(extrastatus_));
  _cached_size_ = 0;
}

MailMemo::~MailMemo() {
  // @@protoc_insertion_point(destructor:soapproto.MailMemo)
  SharedDtor();
}

void MailMemo::SharedDtor() {
  title_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MailMemo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MailMemo::descriptor() {
  protobuf_soap_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_soap_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MailMemo& MailMemo::default_instance() {
  protobuf_soap_2eproto::InitDefaults();
  return *internal_default_instance();
}

MailMemo* MailMemo::New(::google::protobuf::Arena* arena) const {
  MailMemo* n = new MailMemo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MailMemo::Clear() {
// @@protoc_insertion_point(message_clear_start:soapproto.MailMemo)
  title_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&mailid_, 0, reinterpret_cast<char*>(&extrastatus_) -
    reinterpret_cast<char*>(&mailid_) + sizeof(extrastatus_));
}

bool MailMemo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:soapproto.MailMemo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 mailid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &mailid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes title = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_title()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 status = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &status_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 extrastatus = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &extrastatus_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:soapproto.MailMemo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:soapproto.MailMemo)
  return false;
#undef DO_
}

void MailMemo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:soapproto.MailMemo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 mailid = 1;
  if (this->mailid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->mailid(), output);
  }

  // bytes title = 2;
  if (this->title().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->title(), output);
  }

  // int32 status = 3;
  if (this->status() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->status(), output);
  }

  // int32 extrastatus = 4;
  if (this->extrastatus() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->extrastatus(), output);
  }

  // @@protoc_insertion_point(serialize_end:soapproto.MailMemo)
}

::google::protobuf::uint8* MailMemo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:soapproto.MailMemo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 mailid = 1;
  if (this->mailid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->mailid(), target);
  }

  // bytes title = 2;
  if (this->title().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->title(), target);
  }

  // int32 status = 3;
  if (this->status() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->status(), target);
  }

  // int32 extrastatus = 4;
  if (this->extrastatus() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->extrastatus(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:soapproto.MailMemo)
  return target;
}

size_t MailMemo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:soapproto.MailMemo)
  size_t total_size = 0;

  // bytes title = 2;
  if (this->title().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->title());
  }

  // int32 mailid = 1;
  if (this->mailid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->mailid());
  }

  // int32 status = 3;
  if (this->status() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->status());
  }

  // int32 extrastatus = 4;
  if (this->extrastatus() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->extrastatus());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MailMemo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:soapproto.MailMemo)
  GOOGLE_DCHECK_NE(&from, this);
  const MailMemo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MailMemo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:soapproto.MailMemo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:soapproto.MailMemo)
    MergeFrom(*source);
  }
}

void MailMemo::MergeFrom(const MailMemo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:soapproto.MailMemo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.title().size() > 0) {

    title_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.title_);
  }
  if (from.mailid() != 0) {
    set_mailid(from.mailid());
  }
  if (from.status() != 0) {
    set_status(from.status());
  }
  if (from.extrastatus() != 0) {
    set_extrastatus(from.extrastatus());
  }
}

void MailMemo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:soapproto.MailMemo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MailMemo::CopyFrom(const MailMemo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:soapproto.MailMemo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MailMemo::IsInitialized() const {
  return true;
}

void MailMemo::Swap(MailMemo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MailMemo::InternalSwap(MailMemo* other) {
  title_.Swap(&other->title_);
  std::swap(mailid_, other->mailid_);
  std::swap(status_, other->status_);
  std::swap(extrastatus_, other->extrastatus_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MailMemo::GetMetadata() const {
  protobuf_soap_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_soap_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MailMemo

// int32 mailid = 1;
void MailMemo::clear_mailid() {
  mailid_ = 0;
}
::google::protobuf::int32 MailMemo::mailid() const {
  // @@protoc_insertion_point(field_get:soapproto.MailMemo.mailid)
  return mailid_;
}
void MailMemo::set_mailid(::google::protobuf::int32 value) {
  
  mailid_ = value;
  // @@protoc_insertion_point(field_set:soapproto.MailMemo.mailid)
}

// bytes title = 2;
void MailMemo::clear_title() {
  title_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& MailMemo::title() const {
  // @@protoc_insertion_point(field_get:soapproto.MailMemo.title)
  return title_.GetNoArena();
}
void MailMemo::set_title(const ::std::string& value) {
  
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:soapproto.MailMemo.title)
}
#if LANG_CXX11
void MailMemo::set_title(::std::string&& value) {
  
  title_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:soapproto.MailMemo.title)
}
#endif
void MailMemo::set_title(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:soapproto.MailMemo.title)
}
void MailMemo::set_title(const void* value, size_t size) {
  
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:soapproto.MailMemo.title)
}
::std::string* MailMemo::mutable_title() {
  
  // @@protoc_insertion_point(field_mutable:soapproto.MailMemo.title)
  return title_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MailMemo::release_title() {
  // @@protoc_insertion_point(field_release:soapproto.MailMemo.title)
  
  return title_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MailMemo::set_allocated_title(::std::string* title) {
  if (title != NULL) {
    
  } else {
    
  }
  title_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), title);
  // @@protoc_insertion_point(field_set_allocated:soapproto.MailMemo.title)
}

// int32 status = 3;
void MailMemo::clear_status() {
  status_ = 0;
}
::google::protobuf::int32 MailMemo::status() const {
  // @@protoc_insertion_point(field_get:soapproto.MailMemo.status)
  return status_;
}
void MailMemo::set_status(::google::protobuf::int32 value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:soapproto.MailMemo.status)
}

// int32 extrastatus = 4;
void MailMemo::clear_extrastatus() {
  extrastatus_ = 0;
}
::google::protobuf::int32 MailMemo::extrastatus() const {
  // @@protoc_insertion_point(field_get:soapproto.MailMemo.extrastatus)
  return extrastatus_;
}
void MailMemo::set_extrastatus(::google::protobuf::int32 value) {
  
  extrastatus_ = value;
  // @@protoc_insertion_point(field_set:soapproto.MailMemo.extrastatus)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MailContent::kMailidFieldNumber;
const int MailContent::kContent1FieldNumber;
const int MailContent::kContent2FieldNumber;
const int MailContent::kContent3FieldNumber;
const int MailContent::kItemsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MailContent::MailContent()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_soap_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:soapproto.MailContent)
}
MailContent::MailContent(const MailContent& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      items_(from.items_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  content1_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.content1().size() > 0) {
    content1_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.content1_);
  }
  content2_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.content2().size() > 0) {
    content2_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.content2_);
  }
  content3_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.content3().size() > 0) {
    content3_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.content3_);
  }
  mailid_ = from.mailid_;
  // @@protoc_insertion_point(copy_constructor:soapproto.MailContent)
}

void MailContent::SharedCtor() {
  content1_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  content2_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  content3_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mailid_ = 0;
  _cached_size_ = 0;
}

MailContent::~MailContent() {
  // @@protoc_insertion_point(destructor:soapproto.MailContent)
  SharedDtor();
}

void MailContent::SharedDtor() {
  content1_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  content2_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  content3_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MailContent::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MailContent::descriptor() {
  protobuf_soap_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_soap_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MailContent& MailContent::default_instance() {
  protobuf_soap_2eproto::InitDefaults();
  return *internal_default_instance();
}

MailContent* MailContent::New(::google::protobuf::Arena* arena) const {
  MailContent* n = new MailContent;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MailContent::Clear() {
// @@protoc_insertion_point(message_clear_start:soapproto.MailContent)
  items_.Clear();
  content1_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  content2_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  content3_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mailid_ = 0;
}

bool MailContent::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:soapproto.MailContent)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 mailid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &mailid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes content1 = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_content1()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes content2 = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_content2()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes content3 = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_content3()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .soapproto.MailItem items = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_items()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:soapproto.MailContent)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:soapproto.MailContent)
  return false;
#undef DO_
}

void MailContent::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:soapproto.MailContent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 mailid = 1;
  if (this->mailid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->mailid(), output);
  }

  // bytes content1 = 2;
  if (this->content1().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->content1(), output);
  }

  // bytes content2 = 3;
  if (this->content2().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->content2(), output);
  }

  // bytes content3 = 4;
  if (this->content3().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->content3(), output);
  }

  // repeated .soapproto.MailItem items = 5;
  for (unsigned int i = 0, n = this->items_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->items(i), output);
  }

  // @@protoc_insertion_point(serialize_end:soapproto.MailContent)
}

::google::protobuf::uint8* MailContent::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:soapproto.MailContent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 mailid = 1;
  if (this->mailid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->mailid(), target);
  }

  // bytes content1 = 2;
  if (this->content1().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->content1(), target);
  }

  // bytes content2 = 3;
  if (this->content2().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->content2(), target);
  }

  // bytes content3 = 4;
  if (this->content3().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->content3(), target);
  }

  // repeated .soapproto.MailItem items = 5;
  for (unsigned int i = 0, n = this->items_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, this->items(i), deterministic, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:soapproto.MailContent)
  return target;
}

size_t MailContent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:soapproto.MailContent)
  size_t total_size = 0;

  // repeated .soapproto.MailItem items = 5;
  {
    unsigned int count = this->items_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->items(i));
    }
  }

  // bytes content1 = 2;
  if (this->content1().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->content1());
  }

  // bytes content2 = 3;
  if (this->content2().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->content2());
  }

  // bytes content3 = 4;
  if (this->content3().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->content3());
  }

  // int32 mailid = 1;
  if (this->mailid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->mailid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MailContent::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:soapproto.MailContent)
  GOOGLE_DCHECK_NE(&from, this);
  const MailContent* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MailContent>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:soapproto.MailContent)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:soapproto.MailContent)
    MergeFrom(*source);
  }
}

void MailContent::MergeFrom(const MailContent& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:soapproto.MailContent)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  items_.MergeFrom(from.items_);
  if (from.content1().size() > 0) {

    content1_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.content1_);
  }
  if (from.content2().size() > 0) {

    content2_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.content2_);
  }
  if (from.content3().size() > 0) {

    content3_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.content3_);
  }
  if (from.mailid() != 0) {
    set_mailid(from.mailid());
  }
}

void MailContent::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:soapproto.MailContent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MailContent::CopyFrom(const MailContent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:soapproto.MailContent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MailContent::IsInitialized() const {
  return true;
}

void MailContent::Swap(MailContent* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MailContent::InternalSwap(MailContent* other) {
  items_.InternalSwap(&other->items_);
  content1_.Swap(&other->content1_);
  content2_.Swap(&other->content2_);
  content3_.Swap(&other->content3_);
  std::swap(mailid_, other->mailid_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MailContent::GetMetadata() const {
  protobuf_soap_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_soap_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MailContent

// int32 mailid = 1;
void MailContent::clear_mailid() {
  mailid_ = 0;
}
::google::protobuf::int32 MailContent::mailid() const {
  // @@protoc_insertion_point(field_get:soapproto.MailContent.mailid)
  return mailid_;
}
void MailContent::set_mailid(::google::protobuf::int32 value) {
  
  mailid_ = value;
  // @@protoc_insertion_point(field_set:soapproto.MailContent.mailid)
}

// bytes content1 = 2;
void MailContent::clear_content1() {
  content1_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& MailContent::content1() const {
  // @@protoc_insertion_point(field_get:soapproto.MailContent.content1)
  return content1_.GetNoArena();
}
void MailContent::set_content1(const ::std::string& value) {
  
  content1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:soapproto.MailContent.content1)
}
#if LANG_CXX11
void MailContent::set_content1(::std::string&& value) {
  
  content1_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:soapproto.MailContent.content1)
}
#endif
void MailContent::set_content1(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  content1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:soapproto.MailContent.content1)
}
void MailContent::set_content1(const void* value, size_t size) {
  
  content1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:soapproto.MailContent.content1)
}
::std::string* MailContent::mutable_content1() {
  
  // @@protoc_insertion_point(field_mutable:soapproto.MailContent.content1)
  return content1_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MailContent::release_content1() {
  // @@protoc_insertion_point(field_release:soapproto.MailContent.content1)
  
  return content1_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MailContent::set_allocated_content1(::std::string* content1) {
  if (content1 != NULL) {
    
  } else {
    
  }
  content1_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), content1);
  // @@protoc_insertion_point(field_set_allocated:soapproto.MailContent.content1)
}

// bytes content2 = 3;
void MailContent::clear_content2() {
  content2_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& MailContent::content2() const {
  // @@protoc_insertion_point(field_get:soapproto.MailContent.content2)
  return content2_.GetNoArena();
}
void MailContent::set_content2(const ::std::string& value) {
  
  content2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:soapproto.MailContent.content2)
}
#if LANG_CXX11
void MailContent::set_content2(::std::string&& value) {
  
  content2_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:soapproto.MailContent.content2)
}
#endif
void MailContent::set_content2(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  content2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:soapproto.MailContent.content2)
}
void MailContent::set_content2(const void* value, size_t size) {
  
  content2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:soapproto.MailContent.content2)
}
::std::string* MailContent::mutable_content2() {
  
  // @@protoc_insertion_point(field_mutable:soapproto.MailContent.content2)
  return content2_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MailContent::release_content2() {
  // @@protoc_insertion_point(field_release:soapproto.MailContent.content2)
  
  return content2_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MailContent::set_allocated_content2(::std::string* content2) {
  if (content2 != NULL) {
    
  } else {
    
  }
  content2_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), content2);
  // @@protoc_insertion_point(field_set_allocated:soapproto.MailContent.content2)
}

// bytes content3 = 4;
void MailContent::clear_content3() {
  content3_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& MailContent::content3() const {
  // @@protoc_insertion_point(field_get:soapproto.MailContent.content3)
  return content3_.GetNoArena();
}
void MailContent::set_content3(const ::std::string& value) {
  
  content3_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:soapproto.MailContent.content3)
}
#if LANG_CXX11
void MailContent::set_content3(::std::string&& value) {
  
  content3_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:soapproto.MailContent.content3)
}
#endif
void MailContent::set_content3(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  content3_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:soapproto.MailContent.content3)
}
void MailContent::set_content3(const void* value, size_t size) {
  
  content3_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:soapproto.MailContent.content3)
}
::std::string* MailContent::mutable_content3() {
  
  // @@protoc_insertion_point(field_mutable:soapproto.MailContent.content3)
  return content3_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MailContent::release_content3() {
  // @@protoc_insertion_point(field_release:soapproto.MailContent.content3)
  
  return content3_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MailContent::set_allocated_content3(::std::string* content3) {
  if (content3 != NULL) {
    
  } else {
    
  }
  content3_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), content3);
  // @@protoc_insertion_point(field_set_allocated:soapproto.MailContent.content3)
}

// repeated .soapproto.MailItem items = 5;
int MailContent::items_size() const {
  return items_.size();
}
void MailContent::clear_items() {
  items_.Clear();
}
const ::soapproto::MailItem& MailContent::items(int index) const {
  // @@protoc_insertion_point(field_get:soapproto.MailContent.items)
  return items_.Get(index);
}
::soapproto::MailItem* MailContent::mutable_items(int index) {
  // @@protoc_insertion_point(field_mutable:soapproto.MailContent.items)
  return items_.Mutable(index);
}
::soapproto::MailItem* MailContent::add_items() {
  // @@protoc_insertion_point(field_add:soapproto.MailContent.items)
  return items_.Add();
}
::google::protobuf::RepeatedPtrField< ::soapproto::MailItem >*
MailContent::mutable_items() {
  // @@protoc_insertion_point(field_mutable_list:soapproto.MailContent.items)
  return &items_;
}
const ::google::protobuf::RepeatedPtrField< ::soapproto::MailItem >&
MailContent::items() const {
  // @@protoc_insertion_point(field_list:soapproto.MailContent.items)
  return items_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MailFetchListReq::kUserIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MailFetchListReq::MailFetchListReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_soap_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:soapproto.MailFetchListReq)
}
MailFetchListReq::MailFetchListReq(const MailFetchListReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  user_id_ = from.user_id_;
  // @@protoc_insertion_point(copy_constructor:soapproto.MailFetchListReq)
}

void MailFetchListReq::SharedCtor() {
  user_id_ = 0;
  _cached_size_ = 0;
}

MailFetchListReq::~MailFetchListReq() {
  // @@protoc_insertion_point(destructor:soapproto.MailFetchListReq)
  SharedDtor();
}

void MailFetchListReq::SharedDtor() {
}

void MailFetchListReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MailFetchListReq::descriptor() {
  protobuf_soap_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_soap_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MailFetchListReq& MailFetchListReq::default_instance() {
  protobuf_soap_2eproto::InitDefaults();
  return *internal_default_instance();
}

MailFetchListReq* MailFetchListReq::New(::google::protobuf::Arena* arena) const {
  MailFetchListReq* n = new MailFetchListReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MailFetchListReq::Clear() {
// @@protoc_insertion_point(message_clear_start:soapproto.MailFetchListReq)
  user_id_ = 0;
}

bool MailFetchListReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:soapproto.MailFetchListReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 user_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &user_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:soapproto.MailFetchListReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:soapproto.MailFetchListReq)
  return false;
#undef DO_
}

void MailFetchListReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:soapproto.MailFetchListReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 user_id = 1;
  if (this->user_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->user_id(), output);
  }

  // @@protoc_insertion_point(serialize_end:soapproto.MailFetchListReq)
}

::google::protobuf::uint8* MailFetchListReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:soapproto.MailFetchListReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 user_id = 1;
  if (this->user_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->user_id(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:soapproto.MailFetchListReq)
  return target;
}

size_t MailFetchListReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:soapproto.MailFetchListReq)
  size_t total_size = 0;

  // int32 user_id = 1;
  if (this->user_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->user_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MailFetchListReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:soapproto.MailFetchListReq)
  GOOGLE_DCHECK_NE(&from, this);
  const MailFetchListReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MailFetchListReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:soapproto.MailFetchListReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:soapproto.MailFetchListReq)
    MergeFrom(*source);
  }
}

void MailFetchListReq::MergeFrom(const MailFetchListReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:soapproto.MailFetchListReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.user_id() != 0) {
    set_user_id(from.user_id());
  }
}

void MailFetchListReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:soapproto.MailFetchListReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MailFetchListReq::CopyFrom(const MailFetchListReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:soapproto.MailFetchListReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MailFetchListReq::IsInitialized() const {
  return true;
}

void MailFetchListReq::Swap(MailFetchListReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MailFetchListReq::InternalSwap(MailFetchListReq* other) {
  std::swap(user_id_, other->user_id_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MailFetchListReq::GetMetadata() const {
  protobuf_soap_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_soap_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MailFetchListReq

// int32 user_id = 1;
void MailFetchListReq::clear_user_id() {
  user_id_ = 0;
}
::google::protobuf::int32 MailFetchListReq::user_id() const {
  // @@protoc_insertion_point(field_get:soapproto.MailFetchListReq.user_id)
  return user_id_;
}
void MailFetchListReq::set_user_id(::google::protobuf::int32 value) {
  
  user_id_ = value;
  // @@protoc_insertion_point(field_set:soapproto.MailFetchListReq.user_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MailFetchListRsp::kResultFieldNumber;
const int MailFetchListRsp::kMemosFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MailFetchListRsp::MailFetchListRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_soap_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:soapproto.MailFetchListRsp)
}
MailFetchListRsp::MailFetchListRsp(const MailFetchListRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      memos_(from.memos_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:soapproto.MailFetchListRsp)
}

void MailFetchListRsp::SharedCtor() {
  result_ = 0;
  _cached_size_ = 0;
}

MailFetchListRsp::~MailFetchListRsp() {
  // @@protoc_insertion_point(destructor:soapproto.MailFetchListRsp)
  SharedDtor();
}

void MailFetchListRsp::SharedDtor() {
}

void MailFetchListRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MailFetchListRsp::descriptor() {
  protobuf_soap_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_soap_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MailFetchListRsp& MailFetchListRsp::default_instance() {
  protobuf_soap_2eproto::InitDefaults();
  return *internal_default_instance();
}

MailFetchListRsp* MailFetchListRsp::New(::google::protobuf::Arena* arena) const {
  MailFetchListRsp* n = new MailFetchListRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MailFetchListRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:soapproto.MailFetchListRsp)
  memos_.Clear();
  result_ = 0;
}

bool MailFetchListRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:soapproto.MailFetchListRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 result = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .soapproto.MailMemo memos = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_memos()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:soapproto.MailFetchListRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:soapproto.MailFetchListRsp)
  return false;
#undef DO_
}

void MailFetchListRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:soapproto.MailFetchListRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 result = 1;
  if (this->result() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result(), output);
  }

  // repeated .soapproto.MailMemo memos = 2;
  for (unsigned int i = 0, n = this->memos_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->memos(i), output);
  }

  // @@protoc_insertion_point(serialize_end:soapproto.MailFetchListRsp)
}

::google::protobuf::uint8* MailFetchListRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:soapproto.MailFetchListRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 result = 1;
  if (this->result() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result(), target);
  }

  // repeated .soapproto.MailMemo memos = 2;
  for (unsigned int i = 0, n = this->memos_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->memos(i), deterministic, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:soapproto.MailFetchListRsp)
  return target;
}

size_t MailFetchListRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:soapproto.MailFetchListRsp)
  size_t total_size = 0;

  // repeated .soapproto.MailMemo memos = 2;
  {
    unsigned int count = this->memos_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->memos(i));
    }
  }

  // int32 result = 1;
  if (this->result() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->result());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MailFetchListRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:soapproto.MailFetchListRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const MailFetchListRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MailFetchListRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:soapproto.MailFetchListRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:soapproto.MailFetchListRsp)
    MergeFrom(*source);
  }
}

void MailFetchListRsp::MergeFrom(const MailFetchListRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:soapproto.MailFetchListRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  memos_.MergeFrom(from.memos_);
  if (from.result() != 0) {
    set_result(from.result());
  }
}

void MailFetchListRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:soapproto.MailFetchListRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MailFetchListRsp::CopyFrom(const MailFetchListRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:soapproto.MailFetchListRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MailFetchListRsp::IsInitialized() const {
  return true;
}

void MailFetchListRsp::Swap(MailFetchListRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MailFetchListRsp::InternalSwap(MailFetchListRsp* other) {
  memos_.InternalSwap(&other->memos_);
  std::swap(result_, other->result_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MailFetchListRsp::GetMetadata() const {
  protobuf_soap_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_soap_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MailFetchListRsp

// int32 result = 1;
void MailFetchListRsp::clear_result() {
  result_ = 0;
}
::google::protobuf::int32 MailFetchListRsp::result() const {
  // @@protoc_insertion_point(field_get:soapproto.MailFetchListRsp.result)
  return result_;
}
void MailFetchListRsp::set_result(::google::protobuf::int32 value) {
  
  result_ = value;
  // @@protoc_insertion_point(field_set:soapproto.MailFetchListRsp.result)
}

// repeated .soapproto.MailMemo memos = 2;
int MailFetchListRsp::memos_size() const {
  return memos_.size();
}
void MailFetchListRsp::clear_memos() {
  memos_.Clear();
}
const ::soapproto::MailMemo& MailFetchListRsp::memos(int index) const {
  // @@protoc_insertion_point(field_get:soapproto.MailFetchListRsp.memos)
  return memos_.Get(index);
}
::soapproto::MailMemo* MailFetchListRsp::mutable_memos(int index) {
  // @@protoc_insertion_point(field_mutable:soapproto.MailFetchListRsp.memos)
  return memos_.Mutable(index);
}
::soapproto::MailMemo* MailFetchListRsp::add_memos() {
  // @@protoc_insertion_point(field_add:soapproto.MailFetchListRsp.memos)
  return memos_.Add();
}
::google::protobuf::RepeatedPtrField< ::soapproto::MailMemo >*
MailFetchListRsp::mutable_memos() {
  // @@protoc_insertion_point(field_mutable_list:soapproto.MailFetchListRsp.memos)
  return &memos_;
}
const ::google::protobuf::RepeatedPtrField< ::soapproto::MailMemo >&
MailFetchListRsp::memos() const {
  // @@protoc_insertion_point(field_list:soapproto.MailFetchListRsp.memos)
  return memos_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FetchMailReq::kMailidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FetchMailReq::FetchMailReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_soap_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:soapproto.FetchMailReq)
}
FetchMailReq::FetchMailReq(const FetchMailReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  mailid_ = from.mailid_;
  // @@protoc_insertion_point(copy_constructor:soapproto.FetchMailReq)
}

void FetchMailReq::SharedCtor() {
  mailid_ = 0;
  _cached_size_ = 0;
}

FetchMailReq::~FetchMailReq() {
  // @@protoc_insertion_point(destructor:soapproto.FetchMailReq)
  SharedDtor();
}

void FetchMailReq::SharedDtor() {
}

void FetchMailReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FetchMailReq::descriptor() {
  protobuf_soap_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_soap_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FetchMailReq& FetchMailReq::default_instance() {
  protobuf_soap_2eproto::InitDefaults();
  return *internal_default_instance();
}

FetchMailReq* FetchMailReq::New(::google::protobuf::Arena* arena) const {
  FetchMailReq* n = new FetchMailReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void FetchMailReq::Clear() {
// @@protoc_insertion_point(message_clear_start:soapproto.FetchMailReq)
  mailid_ = 0;
}

bool FetchMailReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:soapproto.FetchMailReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 mailid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &mailid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:soapproto.FetchMailReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:soapproto.FetchMailReq)
  return false;
#undef DO_
}

void FetchMailReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:soapproto.FetchMailReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 mailid = 1;
  if (this->mailid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->mailid(), output);
  }

  // @@protoc_insertion_point(serialize_end:soapproto.FetchMailReq)
}

::google::protobuf::uint8* FetchMailReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:soapproto.FetchMailReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 mailid = 1;
  if (this->mailid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->mailid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:soapproto.FetchMailReq)
  return target;
}

size_t FetchMailReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:soapproto.FetchMailReq)
  size_t total_size = 0;

  // int32 mailid = 1;
  if (this->mailid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->mailid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FetchMailReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:soapproto.FetchMailReq)
  GOOGLE_DCHECK_NE(&from, this);
  const FetchMailReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FetchMailReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:soapproto.FetchMailReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:soapproto.FetchMailReq)
    MergeFrom(*source);
  }
}

void FetchMailReq::MergeFrom(const FetchMailReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:soapproto.FetchMailReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.mailid() != 0) {
    set_mailid(from.mailid());
  }
}

void FetchMailReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:soapproto.FetchMailReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FetchMailReq::CopyFrom(const FetchMailReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:soapproto.FetchMailReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FetchMailReq::IsInitialized() const {
  return true;
}

void FetchMailReq::Swap(FetchMailReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FetchMailReq::InternalSwap(FetchMailReq* other) {
  std::swap(mailid_, other->mailid_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata FetchMailReq::GetMetadata() const {
  protobuf_soap_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_soap_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// FetchMailReq

// int32 mailid = 1;
void FetchMailReq::clear_mailid() {
  mailid_ = 0;
}
::google::protobuf::int32 FetchMailReq::mailid() const {
  // @@protoc_insertion_point(field_get:soapproto.FetchMailReq.mailid)
  return mailid_;
}
void FetchMailReq::set_mailid(::google::protobuf::int32 value) {
  
  mailid_ = value;
  // @@protoc_insertion_point(field_set:soapproto.FetchMailReq.mailid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FetchMailRsp::kResultFieldNumber;
const int FetchMailRsp::kContentFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FetchMailRsp::FetchMailRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_soap_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:soapproto.FetchMailRsp)
}
FetchMailRsp::FetchMailRsp(const FetchMailRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_content()) {
    content_ = new ::soapproto::MailContent(*from.content_);
  } else {
    content_ = NULL;
  }
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:soapproto.FetchMailRsp)
}

void FetchMailRsp::SharedCtor() {
  ::memset(&content_, 0, reinterpret_cast<char*>(&result_) -
    reinterpret_cast<char*>(&content_) + sizeof(result_));
  _cached_size_ = 0;
}

FetchMailRsp::~FetchMailRsp() {
  // @@protoc_insertion_point(destructor:soapproto.FetchMailRsp)
  SharedDtor();
}

void FetchMailRsp::SharedDtor() {
  if (this != internal_default_instance()) {
    delete content_;
  }
}

void FetchMailRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FetchMailRsp::descriptor() {
  protobuf_soap_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_soap_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FetchMailRsp& FetchMailRsp::default_instance() {
  protobuf_soap_2eproto::InitDefaults();
  return *internal_default_instance();
}

FetchMailRsp* FetchMailRsp::New(::google::protobuf::Arena* arena) const {
  FetchMailRsp* n = new FetchMailRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void FetchMailRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:soapproto.FetchMailRsp)
  if (GetArenaNoVirtual() == NULL && content_ != NULL) {
    delete content_;
  }
  content_ = NULL;
  result_ = 0;
}

bool FetchMailRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:soapproto.FetchMailRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 result = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .soapproto.MailContent content = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_content()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:soapproto.FetchMailRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:soapproto.FetchMailRsp)
  return false;
#undef DO_
}

void FetchMailRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:soapproto.FetchMailRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 result = 1;
  if (this->result() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result(), output);
  }

  // .soapproto.MailContent content = 2;
  if (this->has_content()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->content_, output);
  }

  // @@protoc_insertion_point(serialize_end:soapproto.FetchMailRsp)
}

::google::protobuf::uint8* FetchMailRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:soapproto.FetchMailRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 result = 1;
  if (this->result() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result(), target);
  }

  // .soapproto.MailContent content = 2;
  if (this->has_content()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->content_, deterministic, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:soapproto.FetchMailRsp)
  return target;
}

size_t FetchMailRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:soapproto.FetchMailRsp)
  size_t total_size = 0;

  // .soapproto.MailContent content = 2;
  if (this->has_content()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->content_);
  }

  // int32 result = 1;
  if (this->result() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->result());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FetchMailRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:soapproto.FetchMailRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const FetchMailRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FetchMailRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:soapproto.FetchMailRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:soapproto.FetchMailRsp)
    MergeFrom(*source);
  }
}

void FetchMailRsp::MergeFrom(const FetchMailRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:soapproto.FetchMailRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_content()) {
    mutable_content()->::soapproto::MailContent::MergeFrom(from.content());
  }
  if (from.result() != 0) {
    set_result(from.result());
  }
}

void FetchMailRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:soapproto.FetchMailRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FetchMailRsp::CopyFrom(const FetchMailRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:soapproto.FetchMailRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FetchMailRsp::IsInitialized() const {
  return true;
}

void FetchMailRsp::Swap(FetchMailRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FetchMailRsp::InternalSwap(FetchMailRsp* other) {
  std::swap(content_, other->content_);
  std::swap(result_, other->result_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata FetchMailRsp::GetMetadata() const {
  protobuf_soap_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_soap_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// FetchMailRsp

// int32 result = 1;
void FetchMailRsp::clear_result() {
  result_ = 0;
}
::google::protobuf::int32 FetchMailRsp::result() const {
  // @@protoc_insertion_point(field_get:soapproto.FetchMailRsp.result)
  return result_;
}
void FetchMailRsp::set_result(::google::protobuf::int32 value) {
  
  result_ = value;
  // @@protoc_insertion_point(field_set:soapproto.FetchMailRsp.result)
}

// .soapproto.MailContent content = 2;
bool FetchMailRsp::has_content() const {
  return this != internal_default_instance() && content_ != NULL;
}
void FetchMailRsp::clear_content() {
  if (GetArenaNoVirtual() == NULL && content_ != NULL) delete content_;
  content_ = NULL;
}
const ::soapproto::MailContent& FetchMailRsp::content() const {
  // @@protoc_insertion_point(field_get:soapproto.FetchMailRsp.content)
  return content_ != NULL ? *content_
                         : *::soapproto::MailContent::internal_default_instance();
}
::soapproto::MailContent* FetchMailRsp::mutable_content() {
  
  if (content_ == NULL) {
    content_ = new ::soapproto::MailContent;
  }
  // @@protoc_insertion_point(field_mutable:soapproto.FetchMailRsp.content)
  return content_;
}
::soapproto::MailContent* FetchMailRsp::release_content() {
  // @@protoc_insertion_point(field_release:soapproto.FetchMailRsp.content)
  
  ::soapproto::MailContent* temp = content_;
  content_ = NULL;
  return temp;
}
void FetchMailRsp::set_allocated_content(::soapproto::MailContent* content) {
  delete content_;
  content_ = content;
  if (content) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:soapproto.FetchMailRsp.content)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PickMailReq::kMailidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PickMailReq::PickMailReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_soap_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:soapproto.PickMailReq)
}
PickMailReq::PickMailReq(const PickMailReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  mailid_ = from.mailid_;
  // @@protoc_insertion_point(copy_constructor:soapproto.PickMailReq)
}

void PickMailReq::SharedCtor() {
  mailid_ = 0;
  _cached_size_ = 0;
}

PickMailReq::~PickMailReq() {
  // @@protoc_insertion_point(destructor:soapproto.PickMailReq)
  SharedDtor();
}

void PickMailReq::SharedDtor() {
}

void PickMailReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PickMailReq::descriptor() {
  protobuf_soap_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_soap_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PickMailReq& PickMailReq::default_instance() {
  protobuf_soap_2eproto::InitDefaults();
  return *internal_default_instance();
}

PickMailReq* PickMailReq::New(::google::protobuf::Arena* arena) const {
  PickMailReq* n = new PickMailReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PickMailReq::Clear() {
// @@protoc_insertion_point(message_clear_start:soapproto.PickMailReq)
  mailid_ = 0;
}

bool PickMailReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:soapproto.PickMailReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 mailid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &mailid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:soapproto.PickMailReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:soapproto.PickMailReq)
  return false;
#undef DO_
}

void PickMailReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:soapproto.PickMailReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 mailid = 1;
  if (this->mailid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->mailid(), output);
  }

  // @@protoc_insertion_point(serialize_end:soapproto.PickMailReq)
}

::google::protobuf::uint8* PickMailReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:soapproto.PickMailReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 mailid = 1;
  if (this->mailid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->mailid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:soapproto.PickMailReq)
  return target;
}

size_t PickMailReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:soapproto.PickMailReq)
  size_t total_size = 0;

  // int32 mailid = 1;
  if (this->mailid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->mailid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PickMailReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:soapproto.PickMailReq)
  GOOGLE_DCHECK_NE(&from, this);
  const PickMailReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PickMailReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:soapproto.PickMailReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:soapproto.PickMailReq)
    MergeFrom(*source);
  }
}

void PickMailReq::MergeFrom(const PickMailReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:soapproto.PickMailReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.mailid() != 0) {
    set_mailid(from.mailid());
  }
}

void PickMailReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:soapproto.PickMailReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PickMailReq::CopyFrom(const PickMailReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:soapproto.PickMailReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PickMailReq::IsInitialized() const {
  return true;
}

void PickMailReq::Swap(PickMailReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PickMailReq::InternalSwap(PickMailReq* other) {
  std::swap(mailid_, other->mailid_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PickMailReq::GetMetadata() const {
  protobuf_soap_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_soap_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PickMailReq

// int32 mailid = 1;
void PickMailReq::clear_mailid() {
  mailid_ = 0;
}
::google::protobuf::int32 PickMailReq::mailid() const {
  // @@protoc_insertion_point(field_get:soapproto.PickMailReq.mailid)
  return mailid_;
}
void PickMailReq::set_mailid(::google::protobuf::int32 value) {
  
  mailid_ = value;
  // @@protoc_insertion_point(field_set:soapproto.PickMailReq.mailid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ShopItemid::kItemidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ShopItemid::ShopItemid()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_soap_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:soapproto.ShopItemid)
}
ShopItemid::ShopItemid(const ShopItemid& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  itemid_ = from.itemid_;
  // @@protoc_insertion_point(copy_constructor:soapproto.ShopItemid)
}

void ShopItemid::SharedCtor() {
  itemid_ = 0;
  _cached_size_ = 0;
}

ShopItemid::~ShopItemid() {
  // @@protoc_insertion_point(destructor:soapproto.ShopItemid)
  SharedDtor();
}

void ShopItemid::SharedDtor() {
}

void ShopItemid::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ShopItemid::descriptor() {
  protobuf_soap_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_soap_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ShopItemid& ShopItemid::default_instance() {
  protobuf_soap_2eproto::InitDefaults();
  return *internal_default_instance();
}

ShopItemid* ShopItemid::New(::google::protobuf::Arena* arena) const {
  ShopItemid* n = new ShopItemid;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ShopItemid::Clear() {
// @@protoc_insertion_point(message_clear_start:soapproto.ShopItemid)
  itemid_ = 0;
}

bool ShopItemid::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:soapproto.ShopItemid)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 itemid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &itemid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:soapproto.ShopItemid)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:soapproto.ShopItemid)
  return false;
#undef DO_
}

void ShopItemid::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:soapproto.ShopItemid)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 itemid = 1;
  if (this->itemid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->itemid(), output);
  }

  // @@protoc_insertion_point(serialize_end:soapproto.ShopItemid)
}

::google::protobuf::uint8* ShopItemid::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:soapproto.ShopItemid)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 itemid = 1;
  if (this->itemid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->itemid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:soapproto.ShopItemid)
  return target;
}

size_t ShopItemid::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:soapproto.ShopItemid)
  size_t total_size = 0;

  // int32 itemid = 1;
  if (this->itemid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->itemid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ShopItemid::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:soapproto.ShopItemid)
  GOOGLE_DCHECK_NE(&from, this);
  const ShopItemid* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ShopItemid>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:soapproto.ShopItemid)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:soapproto.ShopItemid)
    MergeFrom(*source);
  }
}

void ShopItemid::MergeFrom(const ShopItemid& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:soapproto.ShopItemid)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.itemid() != 0) {
    set_itemid(from.itemid());
  }
}

void ShopItemid::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:soapproto.ShopItemid)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ShopItemid::CopyFrom(const ShopItemid& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:soapproto.ShopItemid)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ShopItemid::IsInitialized() const {
  return true;
}

void ShopItemid::Swap(ShopItemid* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ShopItemid::InternalSwap(ShopItemid* other) {
  std::swap(itemid_, other->itemid_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ShopItemid::GetMetadata() const {
  protobuf_soap_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_soap_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ShopItemid

// int32 itemid = 1;
void ShopItemid::clear_itemid() {
  itemid_ = 0;
}
::google::protobuf::int32 ShopItemid::itemid() const {
  // @@protoc_insertion_point(field_get:soapproto.ShopItemid.itemid)
  return itemid_;
}
void ShopItemid::set_itemid(::google::protobuf::int32 value) {
  
  itemid_ = value;
  // @@protoc_insertion_point(field_set:soapproto.ShopItemid.itemid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PickMailRsp::kResultFieldNumber;
const int PickMailRsp::kUserdiamondsFieldNumber;
const int PickMailRsp::kUsergoldsFieldNumber;
const int PickMailRsp::kUseritemsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PickMailRsp::PickMailRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_soap_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:soapproto.PickMailRsp)
}
PickMailRsp::PickMailRsp(const PickMailRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      useritems_(from.useritems_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&result_, &from.result_,
    reinterpret_cast<char*>(&usergolds_) -
    reinterpret_cast<char*>(&result_) + sizeof(usergolds_));
  // @@protoc_insertion_point(copy_constructor:soapproto.PickMailRsp)
}

void PickMailRsp::SharedCtor() {
  ::memset(&result_, 0, reinterpret_cast<char*>(&usergolds_) -
    reinterpret_cast<char*>(&result_) + sizeof(usergolds_));
  _cached_size_ = 0;
}

PickMailRsp::~PickMailRsp() {
  // @@protoc_insertion_point(destructor:soapproto.PickMailRsp)
  SharedDtor();
}

void PickMailRsp::SharedDtor() {
}

void PickMailRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PickMailRsp::descriptor() {
  protobuf_soap_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_soap_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PickMailRsp& PickMailRsp::default_instance() {
  protobuf_soap_2eproto::InitDefaults();
  return *internal_default_instance();
}

PickMailRsp* PickMailRsp::New(::google::protobuf::Arena* arena) const {
  PickMailRsp* n = new PickMailRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PickMailRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:soapproto.PickMailRsp)
  useritems_.Clear();
  ::memset(&result_, 0, reinterpret_cast<char*>(&usergolds_) -
    reinterpret_cast<char*>(&result_) + sizeof(usergolds_));
}

bool PickMailRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:soapproto.PickMailRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 result = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 userdiamonds = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &userdiamonds_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 usergolds = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &usergolds_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .soapproto.ShopItemid useritems = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_useritems()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:soapproto.PickMailRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:soapproto.PickMailRsp)
  return false;
#undef DO_
}

void PickMailRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:soapproto.PickMailRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 result = 1;
  if (this->result() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result(), output);
  }

  // int32 userdiamonds = 2;
  if (this->userdiamonds() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->userdiamonds(), output);
  }

  // int32 usergolds = 3;
  if (this->usergolds() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->usergolds(), output);
  }

  // repeated .soapproto.ShopItemid useritems = 4;
  for (unsigned int i = 0, n = this->useritems_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->useritems(i), output);
  }

  // @@protoc_insertion_point(serialize_end:soapproto.PickMailRsp)
}

::google::protobuf::uint8* PickMailRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:soapproto.PickMailRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 result = 1;
  if (this->result() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result(), target);
  }

  // int32 userdiamonds = 2;
  if (this->userdiamonds() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->userdiamonds(), target);
  }

  // int32 usergolds = 3;
  if (this->usergolds() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->usergolds(), target);
  }

  // repeated .soapproto.ShopItemid useritems = 4;
  for (unsigned int i = 0, n = this->useritems_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, this->useritems(i), deterministic, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:soapproto.PickMailRsp)
  return target;
}

size_t PickMailRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:soapproto.PickMailRsp)
  size_t total_size = 0;

  // repeated .soapproto.ShopItemid useritems = 4;
  {
    unsigned int count = this->useritems_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->useritems(i));
    }
  }

  // int32 result = 1;
  if (this->result() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->result());
  }

  // int32 userdiamonds = 2;
  if (this->userdiamonds() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->userdiamonds());
  }

  // int32 usergolds = 3;
  if (this->usergolds() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->usergolds());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PickMailRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:soapproto.PickMailRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const PickMailRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PickMailRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:soapproto.PickMailRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:soapproto.PickMailRsp)
    MergeFrom(*source);
  }
}

void PickMailRsp::MergeFrom(const PickMailRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:soapproto.PickMailRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  useritems_.MergeFrom(from.useritems_);
  if (from.result() != 0) {
    set_result(from.result());
  }
  if (from.userdiamonds() != 0) {
    set_userdiamonds(from.userdiamonds());
  }
  if (from.usergolds() != 0) {
    set_usergolds(from.usergolds());
  }
}

void PickMailRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:soapproto.PickMailRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PickMailRsp::CopyFrom(const PickMailRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:soapproto.PickMailRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PickMailRsp::IsInitialized() const {
  return true;
}

void PickMailRsp::Swap(PickMailRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PickMailRsp::InternalSwap(PickMailRsp* other) {
  useritems_.InternalSwap(&other->useritems_);
  std::swap(result_, other->result_);
  std::swap(userdiamonds_, other->userdiamonds_);
  std::swap(usergolds_, other->usergolds_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PickMailRsp::GetMetadata() const {
  protobuf_soap_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_soap_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PickMailRsp

// int32 result = 1;
void PickMailRsp::clear_result() {
  result_ = 0;
}
::google::protobuf::int32 PickMailRsp::result() const {
  // @@protoc_insertion_point(field_get:soapproto.PickMailRsp.result)
  return result_;
}
void PickMailRsp::set_result(::google::protobuf::int32 value) {
  
  result_ = value;
  // @@protoc_insertion_point(field_set:soapproto.PickMailRsp.result)
}

// int32 userdiamonds = 2;
void PickMailRsp::clear_userdiamonds() {
  userdiamonds_ = 0;
}
::google::protobuf::int32 PickMailRsp::userdiamonds() const {
  // @@protoc_insertion_point(field_get:soapproto.PickMailRsp.userdiamonds)
  return userdiamonds_;
}
void PickMailRsp::set_userdiamonds(::google::protobuf::int32 value) {
  
  userdiamonds_ = value;
  // @@protoc_insertion_point(field_set:soapproto.PickMailRsp.userdiamonds)
}

// int32 usergolds = 3;
void PickMailRsp::clear_usergolds() {
  usergolds_ = 0;
}
::google::protobuf::int32 PickMailRsp::usergolds() const {
  // @@protoc_insertion_point(field_get:soapproto.PickMailRsp.usergolds)
  return usergolds_;
}
void PickMailRsp::set_usergolds(::google::protobuf::int32 value) {
  
  usergolds_ = value;
  // @@protoc_insertion_point(field_set:soapproto.PickMailRsp.usergolds)
}

// repeated .soapproto.ShopItemid useritems = 4;
int PickMailRsp::useritems_size() const {
  return useritems_.size();
}
void PickMailRsp::clear_useritems() {
  useritems_.Clear();
}
const ::soapproto::ShopItemid& PickMailRsp::useritems(int index) const {
  // @@protoc_insertion_point(field_get:soapproto.PickMailRsp.useritems)
  return useritems_.Get(index);
}
::soapproto::ShopItemid* PickMailRsp::mutable_useritems(int index) {
  // @@protoc_insertion_point(field_mutable:soapproto.PickMailRsp.useritems)
  return useritems_.Mutable(index);
}
::soapproto::ShopItemid* PickMailRsp::add_useritems() {
  // @@protoc_insertion_point(field_add:soapproto.PickMailRsp.useritems)
  return useritems_.Add();
}
::google::protobuf::RepeatedPtrField< ::soapproto::ShopItemid >*
PickMailRsp::mutable_useritems() {
  // @@protoc_insertion_point(field_mutable_list:soapproto.PickMailRsp.useritems)
  return &useritems_;
}
const ::google::protobuf::RepeatedPtrField< ::soapproto::ShopItemid >&
PickMailRsp::useritems() const {
  // @@protoc_insertion_point(field_list:soapproto.PickMailRsp.useritems)
  return useritems_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int JoinRoomReq::kTypeFieldNumber;
const int JoinRoomReq::kRoomIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

JoinRoomReq::JoinRoomReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_soap_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:soapproto.JoinRoomReq)
}
JoinRoomReq::JoinRoomReq(const JoinRoomReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&type_, &from.type_,
    reinterpret_cast<char*>(&room_id_) -
    reinterpret_cast<char*>(&type_) + sizeof(room_id_));
  // @@protoc_insertion_point(copy_constructor:soapproto.JoinRoomReq)
}

void JoinRoomReq::SharedCtor() {
  ::memset(&type_, 0, reinterpret_cast<char*>(&room_id_) -
    reinterpret_cast<char*>(&type_) + sizeof(room_id_));
  _cached_size_ = 0;
}

JoinRoomReq::~JoinRoomReq() {
  // @@protoc_insertion_point(destructor:soapproto.JoinRoomReq)
  SharedDtor();
}

void JoinRoomReq::SharedDtor() {
}

void JoinRoomReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* JoinRoomReq::descriptor() {
  protobuf_soap_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_soap_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const JoinRoomReq& JoinRoomReq::default_instance() {
  protobuf_soap_2eproto::InitDefaults();
  return *internal_default_instance();
}

JoinRoomReq* JoinRoomReq::New(::google::protobuf::Arena* arena) const {
  JoinRoomReq* n = new JoinRoomReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void JoinRoomReq::Clear() {
// @@protoc_insertion_point(message_clear_start:soapproto.JoinRoomReq)
  ::memset(&type_, 0, reinterpret_cast<char*>(&room_id_) -
    reinterpret_cast<char*>(&type_) + sizeof(room_id_));
}

bool JoinRoomReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:soapproto.JoinRoomReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 room_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &room_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:soapproto.JoinRoomReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:soapproto.JoinRoomReq)
  return false;
#undef DO_
}

void JoinRoomReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:soapproto.JoinRoomReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 type = 1;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->type(), output);
  }

  // int32 room_id = 2;
  if (this->room_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->room_id(), output);
  }

  // @@protoc_insertion_point(serialize_end:soapproto.JoinRoomReq)
}

::google::protobuf::uint8* JoinRoomReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:soapproto.JoinRoomReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 type = 1;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->type(), target);
  }

  // int32 room_id = 2;
  if (this->room_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->room_id(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:soapproto.JoinRoomReq)
  return target;
}

size_t JoinRoomReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:soapproto.JoinRoomReq)
  size_t total_size = 0;

  // int32 type = 1;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->type());
  }

  // int32 room_id = 2;
  if (this->room_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->room_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void JoinRoomReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:soapproto.JoinRoomReq)
  GOOGLE_DCHECK_NE(&from, this);
  const JoinRoomReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const JoinRoomReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:soapproto.JoinRoomReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:soapproto.JoinRoomReq)
    MergeFrom(*source);
  }
}

void JoinRoomReq::MergeFrom(const JoinRoomReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:soapproto.JoinRoomReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.type() != 0) {
    set_type(from.type());
  }
  if (from.room_id() != 0) {
    set_room_id(from.room_id());
  }
}

void JoinRoomReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:soapproto.JoinRoomReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void JoinRoomReq::CopyFrom(const JoinRoomReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:soapproto.JoinRoomReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool JoinRoomReq::IsInitialized() const {
  return true;
}

void JoinRoomReq::Swap(JoinRoomReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void JoinRoomReq::InternalSwap(JoinRoomReq* other) {
  std::swap(type_, other->type_);
  std::swap(room_id_, other->room_id_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata JoinRoomReq::GetMetadata() const {
  protobuf_soap_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_soap_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// JoinRoomReq

// int32 type = 1;
void JoinRoomReq::clear_type() {
  type_ = 0;
}
::google::protobuf::int32 JoinRoomReq::type() const {
  // @@protoc_insertion_point(field_get:soapproto.JoinRoomReq.type)
  return type_;
}
void JoinRoomReq::set_type(::google::protobuf::int32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:soapproto.JoinRoomReq.type)
}

// int32 room_id = 2;
void JoinRoomReq::clear_room_id() {
  room_id_ = 0;
}
::google::protobuf::int32 JoinRoomReq::room_id() const {
  // @@protoc_insertion_point(field_get:soapproto.JoinRoomReq.room_id)
  return room_id_;
}
void JoinRoomReq::set_room_id(::google::protobuf::int32 value) {
  
  room_id_ = value;
  // @@protoc_insertion_point(field_set:soapproto.JoinRoomReq.room_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int JoinRoomRsp::kResultFieldNumber;
const int JoinRoomRsp::kRoomIdFieldNumber;
const int JoinRoomRsp::kOtherPlayersFieldNumber;
const int JoinRoomRsp::kRandomSeedFieldNumber;
const int JoinRoomRsp::kStartTimeFieldNumber;
const int JoinRoomRsp::kOwnerIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

JoinRoomRsp::JoinRoomRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_soap_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:soapproto.JoinRoomRsp)
}
JoinRoomRsp::JoinRoomRsp(const JoinRoomRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      other_players_(from.other_players_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&result_, &from.result_,
    reinterpret_cast<char*>(&owner_id_) -
    reinterpret_cast<char*>(&result_) + sizeof(owner_id_));
  // @@protoc_insertion_point(copy_constructor:soapproto.JoinRoomRsp)
}

void JoinRoomRsp::SharedCtor() {
  ::memset(&result_, 0, reinterpret_cast<char*>(&owner_id_) -
    reinterpret_cast<char*>(&result_) + sizeof(owner_id_));
  _cached_size_ = 0;
}

JoinRoomRsp::~JoinRoomRsp() {
  // @@protoc_insertion_point(destructor:soapproto.JoinRoomRsp)
  SharedDtor();
}

void JoinRoomRsp::SharedDtor() {
}

void JoinRoomRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* JoinRoomRsp::descriptor() {
  protobuf_soap_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_soap_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const JoinRoomRsp& JoinRoomRsp::default_instance() {
  protobuf_soap_2eproto::InitDefaults();
  return *internal_default_instance();
}

JoinRoomRsp* JoinRoomRsp::New(::google::protobuf::Arena* arena) const {
  JoinRoomRsp* n = new JoinRoomRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void JoinRoomRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:soapproto.JoinRoomRsp)
  other_players_.Clear();
  ::memset(&result_, 0, reinterpret_cast<char*>(&owner_id_) -
    reinterpret_cast<char*>(&result_) + sizeof(owner_id_));
}

bool JoinRoomRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:soapproto.JoinRoomRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 result = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 room_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &room_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .soapproto.RoomPlayerInfo other_players = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_other_players()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 random_seed = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &random_seed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 start_time = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &start_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 owner_id = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &owner_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:soapproto.JoinRoomRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:soapproto.JoinRoomRsp)
  return false;
#undef DO_
}

void JoinRoomRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:soapproto.JoinRoomRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 result = 1;
  if (this->result() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result(), output);
  }

  // int32 room_id = 2;
  if (this->room_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->room_id(), output);
  }

  // repeated .soapproto.RoomPlayerInfo other_players = 3;
  for (unsigned int i = 0, n = this->other_players_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->other_players(i), output);
  }

  // int32 random_seed = 4;
  if (this->random_seed() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->random_seed(), output);
  }

  // int64 start_time = 5;
  if (this->start_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(5, this->start_time(), output);
  }

  // int32 owner_id = 6;
  if (this->owner_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->owner_id(), output);
  }

  // @@protoc_insertion_point(serialize_end:soapproto.JoinRoomRsp)
}

::google::protobuf::uint8* JoinRoomRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:soapproto.JoinRoomRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 result = 1;
  if (this->result() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result(), target);
  }

  // int32 room_id = 2;
  if (this->room_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->room_id(), target);
  }

  // repeated .soapproto.RoomPlayerInfo other_players = 3;
  for (unsigned int i = 0, n = this->other_players_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->other_players(i), deterministic, target);
  }

  // int32 random_seed = 4;
  if (this->random_seed() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->random_seed(), target);
  }

  // int64 start_time = 5;
  if (this->start_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(5, this->start_time(), target);
  }

  // int32 owner_id = 6;
  if (this->owner_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->owner_id(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:soapproto.JoinRoomRsp)
  return target;
}

size_t JoinRoomRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:soapproto.JoinRoomRsp)
  size_t total_size = 0;

  // repeated .soapproto.RoomPlayerInfo other_players = 3;
  {
    unsigned int count = this->other_players_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->other_players(i));
    }
  }

  // int32 result = 1;
  if (this->result() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->result());
  }

  // int32 room_id = 2;
  if (this->room_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->room_id());
  }

  // int64 start_time = 5;
  if (this->start_time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->start_time());
  }

  // int32 random_seed = 4;
  if (this->random_seed() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->random_seed());
  }

  // int32 owner_id = 6;
  if (this->owner_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->owner_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void JoinRoomRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:soapproto.JoinRoomRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const JoinRoomRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const JoinRoomRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:soapproto.JoinRoomRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:soapproto.JoinRoomRsp)
    MergeFrom(*source);
  }
}

void JoinRoomRsp::MergeFrom(const JoinRoomRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:soapproto.JoinRoomRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  other_players_.MergeFrom(from.other_players_);
  if (from.result() != 0) {
    set_result(from.result());
  }
  if (from.room_id() != 0) {
    set_room_id(from.room_id());
  }
  if (from.start_time() != 0) {
    set_start_time(from.start_time());
  }
  if (from.random_seed() != 0) {
    set_random_seed(from.random_seed());
  }
  if (from.owner_id() != 0) {
    set_owner_id(from.owner_id());
  }
}

void JoinRoomRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:soapproto.JoinRoomRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void JoinRoomRsp::CopyFrom(const JoinRoomRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:soapproto.JoinRoomRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool JoinRoomRsp::IsInitialized() const {
  return true;
}

void JoinRoomRsp::Swap(JoinRoomRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void JoinRoomRsp::InternalSwap(JoinRoomRsp* other) {
  other_players_.InternalSwap(&other->other_players_);
  std::swap(result_, other->result_);
  std::swap(room_id_, other->room_id_);
  std::swap(start_time_, other->start_time_);
  std::swap(random_seed_, other->random_seed_);
  std::swap(owner_id_, other->owner_id_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata JoinRoomRsp::GetMetadata() const {
  protobuf_soap_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_soap_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// JoinRoomRsp

// int32 result = 1;
void JoinRoomRsp::clear_result() {
  result_ = 0;
}
::google::protobuf::int32 JoinRoomRsp::result() const {
  // @@protoc_insertion_point(field_get:soapproto.JoinRoomRsp.result)
  return result_;
}
void JoinRoomRsp::set_result(::google::protobuf::int32 value) {
  
  result_ = value;
  // @@protoc_insertion_point(field_set:soapproto.JoinRoomRsp.result)
}

// int32 room_id = 2;
void JoinRoomRsp::clear_room_id() {
  room_id_ = 0;
}
::google::protobuf::int32 JoinRoomRsp::room_id() const {
  // @@protoc_insertion_point(field_get:soapproto.JoinRoomRsp.room_id)
  return room_id_;
}
void JoinRoomRsp::set_room_id(::google::protobuf::int32 value) {
  
  room_id_ = value;
  // @@protoc_insertion_point(field_set:soapproto.JoinRoomRsp.room_id)
}

// repeated .soapproto.RoomPlayerInfo other_players = 3;
int JoinRoomRsp::other_players_size() const {
  return other_players_.size();
}
void JoinRoomRsp::clear_other_players() {
  other_players_.Clear();
}
const ::soapproto::RoomPlayerInfo& JoinRoomRsp::other_players(int index) const {
  // @@protoc_insertion_point(field_get:soapproto.JoinRoomRsp.other_players)
  return other_players_.Get(index);
}
::soapproto::RoomPlayerInfo* JoinRoomRsp::mutable_other_players(int index) {
  // @@protoc_insertion_point(field_mutable:soapproto.JoinRoomRsp.other_players)
  return other_players_.Mutable(index);
}
::soapproto::RoomPlayerInfo* JoinRoomRsp::add_other_players() {
  // @@protoc_insertion_point(field_add:soapproto.JoinRoomRsp.other_players)
  return other_players_.Add();
}
::google::protobuf::RepeatedPtrField< ::soapproto::RoomPlayerInfo >*
JoinRoomRsp::mutable_other_players() {
  // @@protoc_insertion_point(field_mutable_list:soapproto.JoinRoomRsp.other_players)
  return &other_players_;
}
const ::google::protobuf::RepeatedPtrField< ::soapproto::RoomPlayerInfo >&
JoinRoomRsp::other_players() const {
  // @@protoc_insertion_point(field_list:soapproto.JoinRoomRsp.other_players)
  return other_players_;
}

// int32 random_seed = 4;
void JoinRoomRsp::clear_random_seed() {
  random_seed_ = 0;
}
::google::protobuf::int32 JoinRoomRsp::random_seed() const {
  // @@protoc_insertion_point(field_get:soapproto.JoinRoomRsp.random_seed)
  return random_seed_;
}
void JoinRoomRsp::set_random_seed(::google::protobuf::int32 value) {
  
  random_seed_ = value;
  // @@protoc_insertion_point(field_set:soapproto.JoinRoomRsp.random_seed)
}

// int64 start_time = 5;
void JoinRoomRsp::clear_start_time() {
  start_time_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 JoinRoomRsp::start_time() const {
  // @@protoc_insertion_point(field_get:soapproto.JoinRoomRsp.start_time)
  return start_time_;
}
void JoinRoomRsp::set_start_time(::google::protobuf::int64 value) {
  
  start_time_ = value;
  // @@protoc_insertion_point(field_set:soapproto.JoinRoomRsp.start_time)
}

// int32 owner_id = 6;
void JoinRoomRsp::clear_owner_id() {
  owner_id_ = 0;
}
::google::protobuf::int32 JoinRoomRsp::owner_id() const {
  // @@protoc_insertion_point(field_get:soapproto.JoinRoomRsp.owner_id)
  return owner_id_;
}
void JoinRoomRsp::set_owner_id(::google::protobuf::int32 value) {
  
  owner_id_ = value;
  // @@protoc_insertion_point(field_set:soapproto.JoinRoomRsp.owner_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int JoinRoomEvent::kInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

JoinRoomEvent::JoinRoomEvent()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_soap_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:soapproto.JoinRoomEvent)
}
JoinRoomEvent::JoinRoomEvent(const JoinRoomEvent& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_info()) {
    info_ = new ::soapproto::RoomPlayerInfo(*from.info_);
  } else {
    info_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:soapproto.JoinRoomEvent)
}

void JoinRoomEvent::SharedCtor() {
  info_ = NULL;
  _cached_size_ = 0;
}

JoinRoomEvent::~JoinRoomEvent() {
  // @@protoc_insertion_point(destructor:soapproto.JoinRoomEvent)
  SharedDtor();
}

void JoinRoomEvent::SharedDtor() {
  if (this != internal_default_instance()) {
    delete info_;
  }
}

void JoinRoomEvent::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* JoinRoomEvent::descriptor() {
  protobuf_soap_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_soap_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const JoinRoomEvent& JoinRoomEvent::default_instance() {
  protobuf_soap_2eproto::InitDefaults();
  return *internal_default_instance();
}

JoinRoomEvent* JoinRoomEvent::New(::google::protobuf::Arena* arena) const {
  JoinRoomEvent* n = new JoinRoomEvent;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void JoinRoomEvent::Clear() {
// @@protoc_insertion_point(message_clear_start:soapproto.JoinRoomEvent)
  if (GetArenaNoVirtual() == NULL && info_ != NULL) {
    delete info_;
  }
  info_ = NULL;
}

bool JoinRoomEvent::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:soapproto.JoinRoomEvent)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .soapproto.RoomPlayerInfo info = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:soapproto.JoinRoomEvent)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:soapproto.JoinRoomEvent)
  return false;
#undef DO_
}

void JoinRoomEvent::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:soapproto.JoinRoomEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .soapproto.RoomPlayerInfo info = 1;
  if (this->has_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->info_, output);
  }

  // @@protoc_insertion_point(serialize_end:soapproto.JoinRoomEvent)
}

::google::protobuf::uint8* JoinRoomEvent::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:soapproto.JoinRoomEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .soapproto.RoomPlayerInfo info = 1;
  if (this->has_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->info_, deterministic, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:soapproto.JoinRoomEvent)
  return target;
}

size_t JoinRoomEvent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:soapproto.JoinRoomEvent)
  size_t total_size = 0;

  // .soapproto.RoomPlayerInfo info = 1;
  if (this->has_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->info_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void JoinRoomEvent::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:soapproto.JoinRoomEvent)
  GOOGLE_DCHECK_NE(&from, this);
  const JoinRoomEvent* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const JoinRoomEvent>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:soapproto.JoinRoomEvent)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:soapproto.JoinRoomEvent)
    MergeFrom(*source);
  }
}

void JoinRoomEvent::MergeFrom(const JoinRoomEvent& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:soapproto.JoinRoomEvent)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_info()) {
    mutable_info()->::soapproto::RoomPlayerInfo::MergeFrom(from.info());
  }
}

void JoinRoomEvent::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:soapproto.JoinRoomEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void JoinRoomEvent::CopyFrom(const JoinRoomEvent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:soapproto.JoinRoomEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool JoinRoomEvent::IsInitialized() const {
  return true;
}

void JoinRoomEvent::Swap(JoinRoomEvent* other) {
  if (other == this) return;
  InternalSwap(other);
}
void JoinRoomEvent::InternalSwap(JoinRoomEvent* other) {
  std::swap(info_, other->info_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata JoinRoomEvent::GetMetadata() const {
  protobuf_soap_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_soap_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// JoinRoomEvent

// .soapproto.RoomPlayerInfo info = 1;
bool JoinRoomEvent::has_info() const {
  return this != internal_default_instance() && info_ != NULL;
}
void JoinRoomEvent::clear_info() {
  if (GetArenaNoVirtual() == NULL && info_ != NULL) delete info_;
  info_ = NULL;
}
const ::soapproto::RoomPlayerInfo& JoinRoomEvent::info() const {
  // @@protoc_insertion_point(field_get:soapproto.JoinRoomEvent.info)
  return info_ != NULL ? *info_
                         : *::soapproto::RoomPlayerInfo::internal_default_instance();
}
::soapproto::RoomPlayerInfo* JoinRoomEvent::mutable_info() {
  
  if (info_ == NULL) {
    info_ = new ::soapproto::RoomPlayerInfo;
  }
  // @@protoc_insertion_point(field_mutable:soapproto.JoinRoomEvent.info)
  return info_;
}
::soapproto::RoomPlayerInfo* JoinRoomEvent::release_info() {
  // @@protoc_insertion_point(field_release:soapproto.JoinRoomEvent.info)
  
  ::soapproto::RoomPlayerInfo* temp = info_;
  info_ = NULL;
  return temp;
}
void JoinRoomEvent::set_allocated_info(::soapproto::RoomPlayerInfo* info) {
  delete info_;
  info_ = info;
  if (info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:soapproto.JoinRoomEvent.info)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QuitRoomReq::kUserIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QuitRoomReq::QuitRoomReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_soap_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:soapproto.QuitRoomReq)
}
QuitRoomReq::QuitRoomReq(const QuitRoomReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  user_id_ = from.user_id_;
  // @@protoc_insertion_point(copy_constructor:soapproto.QuitRoomReq)
}

void QuitRoomReq::SharedCtor() {
  user_id_ = 0;
  _cached_size_ = 0;
}

QuitRoomReq::~QuitRoomReq() {
  // @@protoc_insertion_point(destructor:soapproto.QuitRoomReq)
  SharedDtor();
}

void QuitRoomReq::SharedDtor() {
}

void QuitRoomReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QuitRoomReq::descriptor() {
  protobuf_soap_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_soap_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const QuitRoomReq& QuitRoomReq::default_instance() {
  protobuf_soap_2eproto::InitDefaults();
  return *internal_default_instance();
}

QuitRoomReq* QuitRoomReq::New(::google::protobuf::Arena* arena) const {
  QuitRoomReq* n = new QuitRoomReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void QuitRoomReq::Clear() {
// @@protoc_insertion_point(message_clear_start:soapproto.QuitRoomReq)
  user_id_ = 0;
}

bool QuitRoomReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:soapproto.QuitRoomReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 user_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &user_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:soapproto.QuitRoomReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:soapproto.QuitRoomReq)
  return false;
#undef DO_
}

void QuitRoomReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:soapproto.QuitRoomReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 user_id = 1;
  if (this->user_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->user_id(), output);
  }

  // @@protoc_insertion_point(serialize_end:soapproto.QuitRoomReq)
}

::google::protobuf::uint8* QuitRoomReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:soapproto.QuitRoomReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 user_id = 1;
  if (this->user_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->user_id(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:soapproto.QuitRoomReq)
  return target;
}

size_t QuitRoomReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:soapproto.QuitRoomReq)
  size_t total_size = 0;

  // int32 user_id = 1;
  if (this->user_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->user_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QuitRoomReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:soapproto.QuitRoomReq)
  GOOGLE_DCHECK_NE(&from, this);
  const QuitRoomReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const QuitRoomReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:soapproto.QuitRoomReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:soapproto.QuitRoomReq)
    MergeFrom(*source);
  }
}

void QuitRoomReq::MergeFrom(const QuitRoomReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:soapproto.QuitRoomReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.user_id() != 0) {
    set_user_id(from.user_id());
  }
}

void QuitRoomReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:soapproto.QuitRoomReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QuitRoomReq::CopyFrom(const QuitRoomReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:soapproto.QuitRoomReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QuitRoomReq::IsInitialized() const {
  return true;
}

void QuitRoomReq::Swap(QuitRoomReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QuitRoomReq::InternalSwap(QuitRoomReq* other) {
  std::swap(user_id_, other->user_id_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata QuitRoomReq::GetMetadata() const {
  protobuf_soap_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_soap_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// QuitRoomReq

// int32 user_id = 1;
void QuitRoomReq::clear_user_id() {
  user_id_ = 0;
}
::google::protobuf::int32 QuitRoomReq::user_id() const {
  // @@protoc_insertion_point(field_get:soapproto.QuitRoomReq.user_id)
  return user_id_;
}
void QuitRoomReq::set_user_id(::google::protobuf::int32 value) {
  
  user_id_ = value;
  // @@protoc_insertion_point(field_set:soapproto.QuitRoomReq.user_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QuitRoomRsp::kResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QuitRoomRsp::QuitRoomRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_soap_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:soapproto.QuitRoomRsp)
}
QuitRoomRsp::QuitRoomRsp(const QuitRoomRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:soapproto.QuitRoomRsp)
}

void QuitRoomRsp::SharedCtor() {
  result_ = 0;
  _cached_size_ = 0;
}

QuitRoomRsp::~QuitRoomRsp() {
  // @@protoc_insertion_point(destructor:soapproto.QuitRoomRsp)
  SharedDtor();
}

void QuitRoomRsp::SharedDtor() {
}

void QuitRoomRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QuitRoomRsp::descriptor() {
  protobuf_soap_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_soap_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const QuitRoomRsp& QuitRoomRsp::default_instance() {
  protobuf_soap_2eproto::InitDefaults();
  return *internal_default_instance();
}

QuitRoomRsp* QuitRoomRsp::New(::google::protobuf::Arena* arena) const {
  QuitRoomRsp* n = new QuitRoomRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void QuitRoomRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:soapproto.QuitRoomRsp)
  result_ = 0;
}

bool QuitRoomRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:soapproto.QuitRoomRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 result = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:soapproto.QuitRoomRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:soapproto.QuitRoomRsp)
  return false;
#undef DO_
}

void QuitRoomRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:soapproto.QuitRoomRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 result = 1;
  if (this->result() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result(), output);
  }

  // @@protoc_insertion_point(serialize_end:soapproto.QuitRoomRsp)
}

::google::protobuf::uint8* QuitRoomRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:soapproto.QuitRoomRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 result = 1;
  if (this->result() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:soapproto.QuitRoomRsp)
  return target;
}

size_t QuitRoomRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:soapproto.QuitRoomRsp)
  size_t total_size = 0;

  // int32 result = 1;
  if (this->result() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->result());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QuitRoomRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:soapproto.QuitRoomRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const QuitRoomRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const QuitRoomRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:soapproto.QuitRoomRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:soapproto.QuitRoomRsp)
    MergeFrom(*source);
  }
}

void QuitRoomRsp::MergeFrom(const QuitRoomRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:soapproto.QuitRoomRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.result() != 0) {
    set_result(from.result());
  }
}

void QuitRoomRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:soapproto.QuitRoomRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QuitRoomRsp::CopyFrom(const QuitRoomRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:soapproto.QuitRoomRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QuitRoomRsp::IsInitialized() const {
  return true;
}

void QuitRoomRsp::Swap(QuitRoomRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QuitRoomRsp::InternalSwap(QuitRoomRsp* other) {
  std::swap(result_, other->result_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata QuitRoomRsp::GetMetadata() const {
  protobuf_soap_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_soap_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// QuitRoomRsp

// int32 result = 1;
void QuitRoomRsp::clear_result() {
  result_ = 0;
}
::google::protobuf::int32 QuitRoomRsp::result() const {
  // @@protoc_insertion_point(field_get:soapproto.QuitRoomRsp.result)
  return result_;
}
void QuitRoomRsp::set_result(::google::protobuf::int32 value) {
  
  result_ = value;
  // @@protoc_insertion_point(field_set:soapproto.QuitRoomRsp.result)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QuitRoomEvent::kUserIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QuitRoomEvent::QuitRoomEvent()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_soap_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:soapproto.QuitRoomEvent)
}
QuitRoomEvent::QuitRoomEvent(const QuitRoomEvent& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  user_id_ = from.user_id_;
  // @@protoc_insertion_point(copy_constructor:soapproto.QuitRoomEvent)
}

void QuitRoomEvent::SharedCtor() {
  user_id_ = 0;
  _cached_size_ = 0;
}

QuitRoomEvent::~QuitRoomEvent() {
  // @@protoc_insertion_point(destructor:soapproto.QuitRoomEvent)
  SharedDtor();
}

void QuitRoomEvent::SharedDtor() {
}

void QuitRoomEvent::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QuitRoomEvent::descriptor() {
  protobuf_soap_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_soap_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const QuitRoomEvent& QuitRoomEvent::default_instance() {
  protobuf_soap_2eproto::InitDefaults();
  return *internal_default_instance();
}

QuitRoomEvent* QuitRoomEvent::New(::google::protobuf::Arena* arena) const {
  QuitRoomEvent* n = new QuitRoomEvent;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void QuitRoomEvent::Clear() {
// @@protoc_insertion_point(message_clear_start:soapproto.QuitRoomEvent)
  user_id_ = 0;
}

bool QuitRoomEvent::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:soapproto.QuitRoomEvent)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 user_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &user_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:soapproto.QuitRoomEvent)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:soapproto.QuitRoomEvent)
  return false;
#undef DO_
}

void QuitRoomEvent::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:soapproto.QuitRoomEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 user_id = 1;
  if (this->user_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->user_id(), output);
  }

  // @@protoc_insertion_point(serialize_end:soapproto.QuitRoomEvent)
}

::google::protobuf::uint8* QuitRoomEvent::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:soapproto.QuitRoomEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 user_id = 1;
  if (this->user_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->user_id(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:soapproto.QuitRoomEvent)
  return target;
}

size_t QuitRoomEvent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:soapproto.QuitRoomEvent)
  size_t total_size = 0;

  // int32 user_id = 1;
  if (this->user_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->user_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QuitRoomEvent::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:soapproto.QuitRoomEvent)
  GOOGLE_DCHECK_NE(&from, this);
  const QuitRoomEvent* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const QuitRoomEvent>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:soapproto.QuitRoomEvent)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:soapproto.QuitRoomEvent)
    MergeFrom(*source);
  }
}

void QuitRoomEvent::MergeFrom(const QuitRoomEvent& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:soapproto.QuitRoomEvent)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.user_id() != 0) {
    set_user_id(from.user_id());
  }
}

void QuitRoomEvent::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:soapproto.QuitRoomEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QuitRoomEvent::CopyFrom(const QuitRoomEvent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:soapproto.QuitRoomEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QuitRoomEvent::IsInitialized() const {
  return true;
}

void QuitRoomEvent::Swap(QuitRoomEvent* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QuitRoomEvent::InternalSwap(QuitRoomEvent* other) {
  std::swap(user_id_, other->user_id_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata QuitRoomEvent::GetMetadata() const {
  protobuf_soap_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_soap_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// QuitRoomEvent

// int32 user_id = 1;
void QuitRoomEvent::clear_user_id() {
  user_id_ = 0;
}
::google::protobuf::int32 QuitRoomEvent::user_id() const {
  // @@protoc_insertion_point(field_get:soapproto.QuitRoomEvent.user_id)
  return user_id_;
}
void QuitRoomEvent::set_user_id(::google::protobuf::int32 value) {
  
  user_id_ = value;
  // @@protoc_insertion_point(field_set:soapproto.QuitRoomEvent.user_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StartBattleNotify::kTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StartBattleNotify::StartBattleNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_soap_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:soapproto.StartBattleNotify)
}
StartBattleNotify::StartBattleNotify(const StartBattleNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  time_ = from.time_;
  // @@protoc_insertion_point(copy_constructor:soapproto.StartBattleNotify)
}

void StartBattleNotify::SharedCtor() {
  time_ = 0;
  _cached_size_ = 0;
}

StartBattleNotify::~StartBattleNotify() {
  // @@protoc_insertion_point(destructor:soapproto.StartBattleNotify)
  SharedDtor();
}

void StartBattleNotify::SharedDtor() {
}

void StartBattleNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* StartBattleNotify::descriptor() {
  protobuf_soap_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_soap_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const StartBattleNotify& StartBattleNotify::default_instance() {
  protobuf_soap_2eproto::InitDefaults();
  return *internal_default_instance();
}

StartBattleNotify* StartBattleNotify::New(::google::protobuf::Arena* arena) const {
  StartBattleNotify* n = new StartBattleNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void StartBattleNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:soapproto.StartBattleNotify)
  time_ = 0;
}

bool StartBattleNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:soapproto.StartBattleNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 time = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:soapproto.StartBattleNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:soapproto.StartBattleNotify)
  return false;
#undef DO_
}

void StartBattleNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:soapproto.StartBattleNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 time = 1;
  if (this->time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->time(), output);
  }

  // @@protoc_insertion_point(serialize_end:soapproto.StartBattleNotify)
}

::google::protobuf::uint8* StartBattleNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:soapproto.StartBattleNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 time = 1;
  if (this->time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->time(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:soapproto.StartBattleNotify)
  return target;
}

size_t StartBattleNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:soapproto.StartBattleNotify)
  size_t total_size = 0;

  // int32 time = 1;
  if (this->time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->time());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void StartBattleNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:soapproto.StartBattleNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const StartBattleNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const StartBattleNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:soapproto.StartBattleNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:soapproto.StartBattleNotify)
    MergeFrom(*source);
  }
}

void StartBattleNotify::MergeFrom(const StartBattleNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:soapproto.StartBattleNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.time() != 0) {
    set_time(from.time());
  }
}

void StartBattleNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:soapproto.StartBattleNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StartBattleNotify::CopyFrom(const StartBattleNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:soapproto.StartBattleNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StartBattleNotify::IsInitialized() const {
  return true;
}

void StartBattleNotify::Swap(StartBattleNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StartBattleNotify::InternalSwap(StartBattleNotify* other) {
  std::swap(time_, other->time_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata StartBattleNotify::GetMetadata() const {
  protobuf_soap_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_soap_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// StartBattleNotify

// int32 time = 1;
void StartBattleNotify::clear_time() {
  time_ = 0;
}
::google::protobuf::int32 StartBattleNotify::time() const {
  // @@protoc_insertion_point(field_get:soapproto.StartBattleNotify.time)
  return time_;
}
void StartBattleNotify::set_time(::google::protobuf::int32 value) {
  
  time_ = value;
  // @@protoc_insertion_point(field_set:soapproto.StartBattleNotify.time)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BattleResultReq::kTypeFieldNumber;
const int BattleResultReq::kScoreFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BattleResultReq::BattleResultReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_soap_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:soapproto.BattleResultReq)
}
BattleResultReq::BattleResultReq(const BattleResultReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&type_, &from.type_,
    reinterpret_cast<char*>(&score_) -
    reinterpret_cast<char*>(&type_) + sizeof(score_));
  // @@protoc_insertion_point(copy_constructor:soapproto.BattleResultReq)
}

void BattleResultReq::SharedCtor() {
  ::memset(&type_, 0, reinterpret_cast<char*>(&score_) -
    reinterpret_cast<char*>(&type_) + sizeof(score_));
  _cached_size_ = 0;
}

BattleResultReq::~BattleResultReq() {
  // @@protoc_insertion_point(destructor:soapproto.BattleResultReq)
  SharedDtor();
}

void BattleResultReq::SharedDtor() {
}

void BattleResultReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BattleResultReq::descriptor() {
  protobuf_soap_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_soap_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BattleResultReq& BattleResultReq::default_instance() {
  protobuf_soap_2eproto::InitDefaults();
  return *internal_default_instance();
}

BattleResultReq* BattleResultReq::New(::google::protobuf::Arena* arena) const {
  BattleResultReq* n = new BattleResultReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BattleResultReq::Clear() {
// @@protoc_insertion_point(message_clear_start:soapproto.BattleResultReq)
  ::memset(&type_, 0, reinterpret_cast<char*>(&score_) -
    reinterpret_cast<char*>(&type_) + sizeof(score_));
}

bool BattleResultReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:soapproto.BattleResultReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 score = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &score_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:soapproto.BattleResultReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:soapproto.BattleResultReq)
  return false;
#undef DO_
}

void BattleResultReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:soapproto.BattleResultReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 type = 1;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->type(), output);
  }

  // int32 score = 2;
  if (this->score() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->score(), output);
  }

  // @@protoc_insertion_point(serialize_end:soapproto.BattleResultReq)
}

::google::protobuf::uint8* BattleResultReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:soapproto.BattleResultReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 type = 1;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->type(), target);
  }

  // int32 score = 2;
  if (this->score() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->score(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:soapproto.BattleResultReq)
  return target;
}

size_t BattleResultReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:soapproto.BattleResultReq)
  size_t total_size = 0;

  // int32 type = 1;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->type());
  }

  // int32 score = 2;
  if (this->score() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->score());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BattleResultReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:soapproto.BattleResultReq)
  GOOGLE_DCHECK_NE(&from, this);
  const BattleResultReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BattleResultReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:soapproto.BattleResultReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:soapproto.BattleResultReq)
    MergeFrom(*source);
  }
}

void BattleResultReq::MergeFrom(const BattleResultReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:soapproto.BattleResultReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.type() != 0) {
    set_type(from.type());
  }
  if (from.score() != 0) {
    set_score(from.score());
  }
}

void BattleResultReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:soapproto.BattleResultReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BattleResultReq::CopyFrom(const BattleResultReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:soapproto.BattleResultReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BattleResultReq::IsInitialized() const {
  return true;
}

void BattleResultReq::Swap(BattleResultReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BattleResultReq::InternalSwap(BattleResultReq* other) {
  std::swap(type_, other->type_);
  std::swap(score_, other->score_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BattleResultReq::GetMetadata() const {
  protobuf_soap_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_soap_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BattleResultReq

// int32 type = 1;
void BattleResultReq::clear_type() {
  type_ = 0;
}
::google::protobuf::int32 BattleResultReq::type() const {
  // @@protoc_insertion_point(field_get:soapproto.BattleResultReq.type)
  return type_;
}
void BattleResultReq::set_type(::google::protobuf::int32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:soapproto.BattleResultReq.type)
}

// int32 score = 2;
void BattleResultReq::clear_score() {
  score_ = 0;
}
::google::protobuf::int32 BattleResultReq::score() const {
  // @@protoc_insertion_point(field_get:soapproto.BattleResultReq.score)
  return score_;
}
void BattleResultReq::set_score(::google::protobuf::int32 value) {
  
  score_ = value;
  // @@protoc_insertion_point(field_set:soapproto.BattleResultReq.score)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BattleResultRsp::kResultFieldNumber;
const int BattleResultRsp::kGiftsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BattleResultRsp::BattleResultRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_soap_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:soapproto.BattleResultRsp)
}
BattleResultRsp::BattleResultRsp(const BattleResultRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  gifts_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.gifts().size() > 0) {
    gifts_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.gifts_);
  }
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:soapproto.BattleResultRsp)
}

void BattleResultRsp::SharedCtor() {
  gifts_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  result_ = 0;
  _cached_size_ = 0;
}

BattleResultRsp::~BattleResultRsp() {
  // @@protoc_insertion_point(destructor:soapproto.BattleResultRsp)
  SharedDtor();
}

void BattleResultRsp::SharedDtor() {
  gifts_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void BattleResultRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BattleResultRsp::descriptor() {
  protobuf_soap_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_soap_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BattleResultRsp& BattleResultRsp::default_instance() {
  protobuf_soap_2eproto::InitDefaults();
  return *internal_default_instance();
}

BattleResultRsp* BattleResultRsp::New(::google::protobuf::Arena* arena) const {
  BattleResultRsp* n = new BattleResultRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BattleResultRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:soapproto.BattleResultRsp)
  gifts_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  result_ = 0;
}

bool BattleResultRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:soapproto.BattleResultRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 result = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes gifts = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_gifts()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:soapproto.BattleResultRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:soapproto.BattleResultRsp)
  return false;
#undef DO_
}

void BattleResultRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:soapproto.BattleResultRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 result = 1;
  if (this->result() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result(), output);
  }

  // bytes gifts = 2;
  if (this->gifts().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->gifts(), output);
  }

  // @@protoc_insertion_point(serialize_end:soapproto.BattleResultRsp)
}

::google::protobuf::uint8* BattleResultRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:soapproto.BattleResultRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 result = 1;
  if (this->result() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result(), target);
  }

  // bytes gifts = 2;
  if (this->gifts().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->gifts(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:soapproto.BattleResultRsp)
  return target;
}

size_t BattleResultRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:soapproto.BattleResultRsp)
  size_t total_size = 0;

  // bytes gifts = 2;
  if (this->gifts().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->gifts());
  }

  // int32 result = 1;
  if (this->result() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->result());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BattleResultRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:soapproto.BattleResultRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const BattleResultRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BattleResultRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:soapproto.BattleResultRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:soapproto.BattleResultRsp)
    MergeFrom(*source);
  }
}

void BattleResultRsp::MergeFrom(const BattleResultRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:soapproto.BattleResultRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.gifts().size() > 0) {

    gifts_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.gifts_);
  }
  if (from.result() != 0) {
    set_result(from.result());
  }
}

void BattleResultRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:soapproto.BattleResultRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BattleResultRsp::CopyFrom(const BattleResultRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:soapproto.BattleResultRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BattleResultRsp::IsInitialized() const {
  return true;
}

void BattleResultRsp::Swap(BattleResultRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BattleResultRsp::InternalSwap(BattleResultRsp* other) {
  gifts_.Swap(&other->gifts_);
  std::swap(result_, other->result_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BattleResultRsp::GetMetadata() const {
  protobuf_soap_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_soap_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BattleResultRsp

// int32 result = 1;
void BattleResultRsp::clear_result() {
  result_ = 0;
}
::google::protobuf::int32 BattleResultRsp::result() const {
  // @@protoc_insertion_point(field_get:soapproto.BattleResultRsp.result)
  return result_;
}
void BattleResultRsp::set_result(::google::protobuf::int32 value) {
  
  result_ = value;
  // @@protoc_insertion_point(field_set:soapproto.BattleResultRsp.result)
}

// bytes gifts = 2;
void BattleResultRsp::clear_gifts() {
  gifts_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& BattleResultRsp::gifts() const {
  // @@protoc_insertion_point(field_get:soapproto.BattleResultRsp.gifts)
  return gifts_.GetNoArena();
}
void BattleResultRsp::set_gifts(const ::std::string& value) {
  
  gifts_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:soapproto.BattleResultRsp.gifts)
}
#if LANG_CXX11
void BattleResultRsp::set_gifts(::std::string&& value) {
  
  gifts_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:soapproto.BattleResultRsp.gifts)
}
#endif
void BattleResultRsp::set_gifts(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  gifts_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:soapproto.BattleResultRsp.gifts)
}
void BattleResultRsp::set_gifts(const void* value, size_t size) {
  
  gifts_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:soapproto.BattleResultRsp.gifts)
}
::std::string* BattleResultRsp::mutable_gifts() {
  
  // @@protoc_insertion_point(field_mutable:soapproto.BattleResultRsp.gifts)
  return gifts_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* BattleResultRsp::release_gifts() {
  // @@protoc_insertion_point(field_release:soapproto.BattleResultRsp.gifts)
  
  return gifts_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void BattleResultRsp::set_allocated_gifts(::std::string* gifts) {
  if (gifts != NULL) {
    
  } else {
    
  }
  gifts_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), gifts);
  // @@protoc_insertion_point(field_set_allocated:soapproto.BattleResultRsp.gifts)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace soapproto

// @@protoc_insertion_point(global_scope)
